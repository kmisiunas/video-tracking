(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    238627,       4878]
NotebookOptionsPosition[    231642,       4645]
NotebookOutlinePosition[    232020,       4662]
CellTagsIndexPosition[    231977,       4659]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Prototyping - Video analysis", "Title",
 CellChangeTimes->{{3.6031958153593483`*^9, 3.603195829340459*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6031958792746353`*^9, 3.603195882399428*^9}}],

Cell[BoxData[
 RowBox[{"<<", "VideoTracking`"}]], "Input",
 CellChangeTimes->{{3.603195850107835*^9, 3.603195855777253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectVideo", "[", 
  "\"\<~/Dropbox/PhD/Software/video-tracking/practice_videos/iScat_Bulk.avi\>\
\"", "]"}]], "Input",
 CellChangeTimes->{{3.6031958672990713`*^9, 3.603195867915505*^9}, {
   3.603277840744609*^9, 3.603277864026503*^9}, 3.6032824115523977`*^9, 
   3.603449851581484*^9}],

Cell[BoxData["\<\"iScat_Bulk.avi has 1329 frames and is 720x480\"\>"], \
"Output",
 CellChangeTimes->{{3.603277851999065*^9, 3.6032778649331627`*^9}, 
   3.603279158208289*^9, {3.60328177461259*^9, 3.603281787193544*^9}, 
   3.6032818333126097`*^9, 3.603282423972513*^9, 3.603283392792469*^9, 
   3.603283525279818*^9, 3.603283975435648*^9, 3.603284271287157*^9, 
   3.6032879711272097`*^9, 3.6032881019554577`*^9, 3.603288267948517*^9, 
   3.603288808960218*^9, 3.603379481247286*^9, 3.6033899046698523`*^9, 
   3.603400298181967*^9, 3.6034004506967287`*^9, 3.603400546965016*^9, {
   3.603400594987768*^9, 3.603400605637766*^9}, 3.603400705822837*^9, 
   3.603403133490156*^9, 3.603403256938835*^9, 3.603403318982457*^9, 
   3.60344985297959*^9, 3.6034631943718147`*^9, 3.603463507286759*^9, 
   3.6034637857977533`*^9, 3.603464153153734*^9, 3.603464350857236*^9, 
   3.603464643274418*^9, 3.60346472193298*^9, 3.6034648823908453`*^9, 
   3.603465060690699*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectROI", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"373", "260"},
      {"453", "260"},
      {"453", "185"},
      {"373", "185"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Input",
 CellChangeTimes->{{3.6032786266831017`*^9, 3.6032786321543837`*^9}, 
   3.6032786766904507`*^9, 3.603282428570818*^9, 3.603282482614483*^9, {
   3.603449857043373*^9, 3.603449860602206*^9}, 3.603449909121293*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"373", "260"},
     {"453", "260"},
     {"453", "185"},
     {"373", "185"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.603278673638488*^9, 3.6032786772540817`*^9}, 
   3.603279159846744*^9, {3.6032817758270273`*^9, 3.603281788078198*^9}, 
   3.6032818345129232`*^9, {3.603282479225115*^9, 3.603282483316453*^9}, 
   3.6032833931546907`*^9, 3.6032835265607977`*^9, 3.603283975842204*^9, 
   3.603284272493949*^9, 3.603287972546253*^9, 3.603288103262556*^9, 
   3.603288269711206*^9, 3.603288809229513*^9, 3.6033794830874243`*^9, 
   3.603400299733075*^9, 3.603400452235527*^9, 3.603400548078083*^9, 
   3.6034006073709*^9, 3.603400706884964*^9, 3.603403134363817*^9, 
   3.603403258059875*^9, 3.6034033201653223`*^9, 3.603449855212873*^9, 
   3.603449905506174*^9, 3.603463197035516*^9, 3.603463508515256*^9, 
   3.603463787741145*^9, 3.603464154341014*^9, 3.603464352118503*^9, 
   3.6034646446829348`*^9, 3.6034647231802387`*^9, 3.6034648835660257`*^9, 
   3.603465062029841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetFrame", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.603281699588455*^9, 3.6032817234250317`*^9}, {
   3.60328190882908*^9, 3.603281915073009*^9}, 3.603282489049897*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 15}, {161, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{{3.603281703229395*^9, 3.603281723946205*^9}, {
   3.603281777835135*^9, 3.6032817896250887`*^9}, 3.603281836578196*^9, 
   3.603281922528615*^9, 3.603282504021379*^9, 3.603283408875763*^9, 
   3.603283991913459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberOfFrames", "[", "]"}]], "Input",
 CellChangeTimes->{{3.603282509464189*^9, 3.6032825134465723`*^9}}],

Cell[BoxData["1333"], "Output",
 CellChangeTimes->{3.603282513914764*^9, 3.6032839928593903`*^9, 
  3.6032882726158123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UpdateBackgroung", "[", 
  RowBox[{"1", ",", 
   RowBox[{"NumberOfFrames", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603278266955419*^9, 3.603278272521852*^9}, 
   3.6032825177214317`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 15}, {161, 
    0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{3.6032783279177017`*^9, 3.6032784438382874`*^9, 
  3.603282521065597*^9, 3.6032834134022417`*^9, 3.603283555010374*^9, 
  3.603283999198542*^9, 3.603284277562662*^9, 3.6032879785808496`*^9, 
  3.603288110221582*^9, 3.603288277584704*^9, 3.6032888149510927`*^9, 
  3.603379490645956*^9, 3.60338990963729*^9, 3.603400306288601*^9, 
  3.603400457369916*^9, 3.603400553499848*^9, 3.603400613830518*^9, 
  3.603400712275031*^9, 3.603403140365453*^9, 3.603403263306428*^9, 
  3.603403325272159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentBackground", "[", "]"}]], "Input",
 CellChangeTimes->{{3.603283531655653*^9, 3.6032835489445257`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.60328353888267*^9, 3.6032835599936447`*^9}, 
   3.6032882603111553`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "VideoTracking", "]"}]], "Input",
 CellChangeTimes->{{3.603284157571396*^9, 3.603284168878433*^9}, {
  3.603286457279253*^9, 3.603286488895974*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Threshold\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"FilterArea\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "40"}], "}"}]}], ",", 
   RowBox[{"\<\"FilterCircularity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.9`", ",", "1.5`"}], "}"}]}], ",", 
   RowBox[{"\<\"BufferSize\"\>", "\[Rule]", "1000"}], ",", 
   RowBox[{"\<\"UpdateBackgroung\"\>", "\[Rule]", "False"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6032841692850657`*^9, {3.6032864612029*^9, 3.603286489290386*^9}, 
   3.6032880468285627`*^9, 3.603400309853643*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.603288054490077*^9, 3.603288056586308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binarize", "@", 
  RowBox[{"SubstractBG", "[", " ", 
   RowBox[{"GetFrame", "[", " ", "7", " ", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603288059215788*^9, 3.603288061958323*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIih+IFzKMglEwDAAj
ECA4A+gQHICREeFCFLcOFoDkQGS3Dh4w6B2IHK+D04HIYLC7bxSMgmEJAEdb
CIM=
    "], {{0, 15}, {161, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{{3.603288040088895*^9, 3.603288075220367*^9}, 
   3.6032881364074907`*^9, 3.603288835244955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"i1", " ", "=", 
  RowBox[{"FrameBinarize", "[", " ", 
   RowBox[{"SubstractBG", "[", " ", 
    RowBox[{"GetFrame", "[", " ", "7", " ", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603282560200563*^9, 3.6032825886103888`*^9}, {
   3.603283434378995*^9, 3.60328345650279*^9}, 3.603283510918487*^9, {
   3.603283578602357*^9, 3.603283635770542*^9}, 3.603284281191627*^9, {
   3.603284327121336*^9, 3.603284366812574*^9}, 3.603286527647797*^9, {
   3.603288330911747*^9, 3.6032883332631273`*^9}, {3.603389894009985*^9, 
   3.603389895150241*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIih+IFzKMglEwHADj
QDuAAGAEAgRnAB2CCyA7ENmtgwYgOZBxUDoQGQx2942CUTAKBgIAALmMCGc=

    "], {{0, 15}, {161, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{
  3.603288131090947*^9, 3.6032881926937647`*^9, 3.603288297855612*^9, 
   3.603288334990643*^9, 3.603288836381496*^9, {3.603379515128973*^9, 
   3.603379519009713*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectParticles", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.603288194299192*^9, 3.603288209181898*^9}, 
   3.603288288637739*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.6032882990561934`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnalyseFrame", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.60328260254169*^9, 3.603282605086141*^9}, {
   3.603284011391642*^9, 3.60328401183178*^9}, {3.6032843104950542`*^9, 
   3.603284315114819*^9}, {3.6032844801493893`*^9, 3.603284480794807*^9}, {
   3.603285232049264*^9, 3.603285259025279*^9}, 3.603288033063342*^9, {
   3.6033795308370523`*^9, 3.603379532066412*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      PanelBox[
       TagBox[GridBox[{
          {"\<\"Raw\"\>", "\<\"Binirize\"\>", "\<\"Img-BG, enhance\"\>"},
          {
           GraphicsBox[
            TagBox[RasterBox[CompressedData["
1:eJw1VtdvW9cdNoo+9K1/Q5E0QBNHg5RImRJJce+9h7j33puURFISJVKDmrYp
Wx6xHcWOnNqN7KSBW9dIk8B96EvRPrRAUKBF/oECfehDv3PZHlwSoHTJ891v
/c7PfGl96EdXrlzJ/wRvem+Zl8t5q4Yf4wO/Wgj6yL9+itddvFhSS7jS2Tm4
cTTsr682G/VGs9mqlfLZXKHSaDRr5UI2nUomYtFQwO/zej3uJafDYbfbbFaL
yahVKuQKpVKpUEhFUoVKo9ZoNFqdwWSxO5xLrqUll9vt8fp8/mA4EiUrlkim
s/lCqVytVCrVenN1vbfV397e2d0bHhzfGN0e3dgfbPW28JednePbX/zpn//+
4S9MgcYZzTfbvbV2s5JPpVLpTDqdiIb8gWAUn+KRoN/rdrmcDpvFbDKZjEa9
lqDQaJRyiZDH4XD5Iv4iZ4FJZ1xj8wRCAZ8vEIoVWr3RaDIajCaT2WyxWO0E
KpY3AKixRCqTz+Vy+WK51lrprPU2+9t7e8PDk9HZ6Y39/np7bXN7fzg8Hj1/
+/2/fvgrg6e0R7K1VmelVS2k47FYPBGPR0IBPHcIjxwO+txLDjvQGfU6nVaj
VoM0mQyXiM9hzTEX+DKdXMhm0j6cpDEXuIJF9sL8AocvkSmVKopdlUqt1mj1
BqPRaDCYrDaH0+X2+kPBQDAUjsYBtVip1hqt5dXuxtZ2f7MD9crVxnJ7fXDw
4OU3f/7D61muzBpOV+qtRr2YSUQjECMC1qCmDySGAz630241mww6YFMr5TKp
RCwSCnFx5xnT01MsodapkyxMf/DeL65OAy6HxZiZmWWBV5FYwOPjTpFYLJFI
pDKZTCqVK1UaHXi12K2gFTYA1mAkGosn0zkArddqpVwqBpKShXqnf/3B0y8/
ezTDkVmCyWJtuVGjAEYIwICHLC8QjvkzGw16LQAqsAnBRwFk0cGaItC+s11z
sKffu0oXWYN5r4ZHp9Fmr7H5AhH0BkQRgSgiIAlMhVqj04+lN1vA5xKRHXyG
Y6l8vpDPZdIxit1ErtbevfXg4uEZnSM3++P56kqTAhiNRQHQ73LBdx7I7AE+
u8MCgQiFCikBSLYUASDt/ckZZ/dX//juoi5j/nySZavufNQNyKcnJ6ZnWIvg
UMTnwpZisVgooHBKJGKZigiu0+oph5qtdqcLWrmdbn8klUzGwV3Y54FbA7Fs
deP49P6tk9lFhSWQLDe7q//zYAwQgz7E1eXx+xEQghAaQ2StRqVQKGQS7EgB
pF+dmnW0n/39mycN1dy7dEF69PkfHzatM1NXpxnzPMH/RRZTHJIFCsEgYo4E
4RfNFsIgaMBuPkQyk8ugLyLBAFY0VahvXr9zfu+UyVNag5l6e3O906zkkkgI
QEbgPQ/I9/t9Y42tiDBSQkICmSEWAM7PTNCYzvZn33/9uKVjvTunWnv1t/98
dxxiTr0/PccGZ2IJcasYphWT74B9mBANoAdzVisJt5NSyUe5PZ7OV4q5VBwC
QsdUrtIa3Pzo6cd3Z3kqR6ywvL7T77Ub5Vw2k8lm0gmkNwBfREKhEFHZ4SQY
TQY9MI5jLJXwOXP0GYY61Lmz03Dzae/QBfGDT7+917DQJj+ks7hUOAhrUtwt
k48XqlIHCxKANpvNThwIbAGS6EgiWygXcqTXxumuLm+fnl9ePJzhqV3pandw
ONzZWGlUSsVSuVTM4r5INJFJQvBwwIPfQRHaLaQHidJqFUCKeOxrzFmu3OS1
qBfpH7wzcU0baR3W/dKJySnGAm/MmBSxUKlU6HKlSo3GofrRROJhH4fYB+6w
kOQUerGYT8fDqLckSrK2snt28erzJ3NiY6ja3T25c+vmfn9tpdVotprNaimX
TmdyxUIhB5DhYDDkB0Q7nttCAg2MGq1SKuBy2DyxXCMTztMmIKtQtxR1arhT
dAaLKwRpFHMKJVxHdbtOR9gzUuigidNJ/BdAG0ZJ+aay6O1KKQsPRhKZYqnS
6h49fP7by08XFI50Z3d0/8n5o7OT3d5ap7u+vt5erpfL6KVGq1bOE+fGo2E/
zOiEH8mIM2AfvUYuJk3CZc+zGHQ6fXaOtcDmsheYNMY8VyABZYQ1NfEc7teT
qsYcMlJj0IkpOG4JtGA8kUxhAAJfs14rQLtEpoC925uji5dvXl4sar2lweiT
Z79+eXnx6HS4tzs8PDjY2drorq1vDvpbPcznOkZzDo8WCgbhFx/hEvFz2E1a
ojVyLRVi2HFIYrF4HL5YptRSk4M8CMkqiRlYwwJtQBUMhcK4AC6ZIdDK5Wq9
hRHXXa5iCJbq9XpzefPwweVXb148EZnDreOPv/zd22+/fvXifDQand2/d3d0
dLB/cHj91s2T46O9/mZvFV8poUTJqE7GwwEvEh4IehxWuJJMBb1ajuGmQsIV
KgXQGcw2nCnsBNYSmWw+dAKpE+rcgFmcgoHwY+CtVK0B2urKaqe3PTwadFs4
QrQ32pjRw7Onv3n95sXjRY27OBg9fv7VF5dPz28Nhxjax8d7W72NHkb23u72
oNddheDFfAZCxzCVyJz2uMgpBScbhw2GsqE0yEHCZNITOfUm8OtCj47L3k9l
NEydZ4jX0pl8qQT/UOcZAOkSpfqDnf2Tm7dPhgNM5P2Tg939o/vPXr39/etf
3v0vH2e/Hw==
              "], {{0, 15}, {161, 0}}, {0, 255},
              ColorFunction->GrayLevel],
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
             Selectable->False],
            BaseStyle->"ImageGraphics",
            ImageSizeRaw->{161, 15},
            PlotRange->{{0, 161}, {0, 15}}], 
           GraphicsBox[
            TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIih+IFzKMglEwDAAj
ECA4A+gQHICREeFCFLcOFoDkQGS3Dh4w6B2IHK+D04HIYLC7bxSMgmEJAEdb
CIM=
              "], {{0, 15}, {161, 0}}, {0, 1},
              ColorFunction->GrayLevel],
             BoxForm`ImageTag[
             "Bit", ColorSpace -> Automatic, Interleaving -> None],
             Selectable->False],
            BaseStyle->"ImageGraphics",
            ImageSizeRaw->{161, 15},
            PlotRange->{{0, 161}, {0, 15}}], 
           GraphicsBox[{RasterBox[CompressedData["
1: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
e0c3u93iVcZRg1aL4JyX7LvihQSmzw0eTbwdiwLTmnkR00Vg7rwWpvciHIq3
k3wfGfxN3fZfQFyh4hsrwf7Myc+meEV1ZhGjexhYgf4UYJr6IGhAhgiC63X1
JQIDm+0LGP+w3r+BPme7n9dYyIpWqOdsIPWBYKWB+tym406qo/Od5umQdoEe
nWAl+1N+Y1qdfonu41BlnJwB8R+uE1ddPglmsY+uNTsTRk8FvT6PSwDx+F1/
nzd2DfsJo/L0y1A1kKqjiW1yHEwqfKvuD1at8/qw0ak/PO+O2laviug5cGm7
JyXjUTxUJddXXxb9Qx2pT84yk87WoJdQfmMI6OVJeZ80I1D18L5Z2xGSJsdB
P9X2qVqwNySHKV4i+bNmuYHvh8btEDeEikd7grEAJvv7BkFzwFWa/iAhzGur
Fi/iJIIIp+Ibuxp8n3trYOmR8eFgfakTCYWkqDV9NisSXP8/Ru09R9rf0VQ9
ySo4f4nrRoK1c3GqQXYSrJ8OjwwPigejmOKVEAhulCcd8zkOwZzw6+vGB6Dq
QILB87fB4GU7T22r5glaScF6z6j6eAwhWHT77eqN4NwKf7vI1wGyareR17f5
QmD9m41txXEQK6h8mgdk96/R5dd40PS32P10TPBXPUHacem/6iFWeBdWWYgI
xYPbvhMUJ4MuXHuoBtEQP47UGTIhFPKxVB7Fg7S/dflJIuLdQtGev/Hnv65P
vqIuv5jXg6qrTETxlKc+U55S9ebupVNtW+6X8MZetm7t3zCP27zXppGSQ+Fy
k+3d4XYQTi6S//A++AbF6ItWNL9QfHhHIR20io954xZGNrtdzrK6+f3r+8T0
5bfnTfMAw4EgQdXP5ZM4CFb5iG6pC5ofn5evrMvHcseV9npuIQRXiTpXFQBd
IRWPFoI1ShCpvIQPpkiRZaDhBZrz/mpBm98btC/IHdGj5x1nSKP9VtJvH4J0
xLVzVonkOjpZqclUJ9f1Fuo8l1Wj4yJ0NlW9vtV4fpVQORy0pZAP5aOr1Y+s
jga/Va/pNzQkmGXYce9FRTQUUdS5GH8UpHRdUv0wFESf7i/Wm/uBSwy7sW9Y
GAqO3w/bfCIR8uFBGQ6v/vN1joJD1PkVIUw/HFonHBUOhivlD/5DvPwdFW+c
D6lrz7NtJxKQX6Dii6GQrVhJfB5Pzq+bcYSOfr19Y3i83W1YyEPBnl8OmtsI
oGyQHufHjYbRjsQYrz0nweFSfki9n0WMaGVUe5EP7i218gefUzAoqy6PSp9U
pjGhLBbXA/V6BuklQ9Ur7HlZdQ50XU0HV2fX+6GCfgonbRcnsNUn38iKCcGs
i09zJuqRdvlZR3l/JMLZfcm5yuhYMO+qcdZdTSD9pGetNMxIO/Wo2sDoTha8
Lu8YdHlHEjSL1LzHimO/13d9a39WkXtJ5R8h+OBHW3NxdDq0nJ4ulv6WCMUm
/UNGvyXhNpOKN5B6YI+d2k47cv/oTD6fs4Lk63Y1H3dmRoFXdotEJNnvvucj
xkRBsk1c2mVK4+cR6/LEAtCvUDpGjN2ZlM5NAH3Y71terSXtpc/d8UN45H7o
UhdXdKS2V34KxDU2CW4CEWgcM6PJ2vsgUC/vplF+DFUmqb/pcCIgf0Hhx+ve
/4rbW6e7/LI5Cc/51Hjuf+enii/5mvso/FK3VfDT+nOhymPVmra7zUXVlhKE
d0pEwW0D96pJCfjQzef00NlJ/3U67jvyTGy0e1jUjY94rMd+T9WBkPzF5ug5
vgolX6l82gEwXlB1jQ15lq/Bs+DviwZhEv32yqr6entifque7FZbwT9a2Kqf
RxSUHxkGT7vY8nqWxiAL94gzS/YBMTapn2NtAvxZm4b1Pp+MzFfiTt2vZ8Lr
toPlbIt0FNx6k6VjlAhJKFUX8+P5Fm56r9VDqk+g5ks+4AfiD43hEFUvR9q7
QMpeLAbt82hSl3HAmmfax8g0Cuye1H6s5w1i+SjWg9hvcb2bejSjCBcLswDQ
J5bPnWzPB9G5LfPYR0/wgpdbvmgbCkZ/6tykAPYr2kTOex2JvPtKy6Z1TYT/
Mu+j5x6T/GJ7692gKVGgZ44PWzuI3M/dRiWLb/3J/3Hgb3gxnrSzUV/riro/
eBMywxEy6VMdgwsnIObMXjTvqgBVAe8OWLyKRk37grJZv8RB06g0wDOz4Tkl
oufv2RO6HUDV6tQKn0ekPj0/++6AWFKX0JgXPdrHgjPwlcqAV0IQiy8ZruSG
gNAqTM5LD4dk+fKDb2qCQPApuxYKwe52GCNxg3hQzb4ZBvV1YMVPQ+hPQgQQ
r6+r01Do5C19cehPcXgvym+2BNeXOl9Arp97VP1zHLlfj5tusAoFW340y3hD
GMQ9e5MQgTvvacJQ/Xh8cK+rQ5r29RxTVd8naU4L4sAr3bHg9o4EpPWm6pHS
wHg6o+sC60gUn/vsuS6z+X5Po9DoR4KKbxrtS6gsBiNVGnv1SDPOhf4vQ2jN
aH1YmABNjQpm3woJONN3dnkwLhnEKYtJGlU/Lz/XFKRPKZ3AbVpXabovn0Yn
14Mb+9SdMB8wNn8YtEg/FCwT9egIhy2QvnG10Z/5N3GSr7BPpfLVAih+fbe3
B5v0e2IpXjWGYjqlD3zAZvuqz/cl9WZg4edRVofBWHb6aV7Fv283meNu/Tbo
nBgmrz4tYVieRJIT4/NLvwTYxaVvn2UST94P5YdFkfrma/6uqE53CjSHiPOf
k3ws+npOrgmwdKn6PnvwvOrOvVXl1Z33kP7y9/kS7u3MkFTblvM9o5QaH+lH
56SMEvoGgGZIxeGDwL1kNHvKGJK/o00GCKsa5skajPfreSTTsE55SZwEcH77
VDX+XiwEVvcuhrcOhDnryfLpMyVwcWWe/DAwHuJXcxQfdOt1O6/v+qETn/uh
eMWo7q8jBLD+WkdAo3dT6a32p/qbPlSdLAe0U4nD7+iS6+YEpUfJeb10NXj/
qoa64a/g+3YaxNiWACLrResLNNIfY0e0euwViVkl11YNbtWwLp25sk4fSQq2
TdmsVR9344yuO/crv2nQ97pBzNe61WhcN28Xb9YuHp2WzAopIf0q2e97DSeG
kbq+vfx4G3k45NseJajecQPTUosv3RSP9SkXhqmPiscsKi2nnga9y4YmBmsy
SDtE6eMUyPYWndFJOonoaBOrD9tPoc2XeBe5zrKp8+rnUZs8Vb+zyRUM/KI/
rsFkA1UHVgiV5afvP5+V+1/PWz8LUhkVvwgBZ8liEilQdqPy/ylgjnr6aJde
GmS9Mle0j0mA/JS2xu+1XpCu6z+h98CW5xEbxUfqnEXLz2HxFiQu7nnOD3LM
lwSnHofgilGN09CmeYphe1HRedpBMK/+0euVahCktOpRqm39wX867njGzDAQ
80ba1JR6gXMi6rJxjAdku8ZnSy6EQfL5csjWWf9+/J/N1cPI7aT/MvON6ajh
p+A80EEjfEwK6MUUxOAwtp7vt7X+nCGH67W5aGAA5FMzR0cNIO00O/Nl9oJ6
vSo/axYX1D0A3F2FmToTxZAuof7vQf25LIaaBolA8O5X7C/LSQI/pp+e0lZy
33ytl5XclHVfujwGxKfT7fpejgNxbfh6f2nz8yMcfuD47CgPaM5zWvMm9t8/
hy9VovjQD8SyvPmll/8UD7DodcNzwX5wlmc9028VAI5Om4Hez0g/y0nJXvhL
NARG5Uf+sGi67i1tIrVewmF6pC5ekaZ1h9suUQQB223+Cfum68iJJeNSvRLd
IHjdW4lT4gvxmFEkYiEz0PhQkkquH7fyK882rQRdNXZm+U4vMDw/Zz897vm9
7lu5d51frnXqnNfV5RIM6j1jQc8ZCZAepStpVCXCS/9C7B9bT8LI9cyi7Knx
UBmYYfLsUDzMNY6HOmcngJurUMtWRMLaZqi69dBoqCTGU8BtvY1PRLslKHY9
KakURYL55f/MkHy6Vf3GhClpsOfpdA/Lz8aHdrtO0w1ywLhB1ffkQbvt5fti
1wJ4VZ1aZ1ZA8l+7MZ3cM/NQsN74XNnR0xDupupqUkAYUPnOn38e878FdJ44
zO2mNxRf65bHEEu77VsaD5fedfaEH2ZcG2oc8f3/EBGSXnvuzf4bv2HR+Nyo
p1xILmq53T8kAPGcNezlMdJfv//szNpbPuCVUfucD4YlK+XNCCG43eaodZnj
hyof5cVLCyPAqdnJ+Tw9FsxwXtfEoFjoju/iev2AALptDdNL/Eid4m4ccNiY
9De0HB+xU11JnXP9Qbbt3+RBVifkprT3Aevzi9Vh/vX7iCjeXmKr07ifSQio
+kmbhnqoD1UnsxK0/uzzRoo/5cm1r/bQvkr2f2byr7LJO5q9PuispXMStoWA
fmXwLtngDBTXJHaOVpDrrDpg1suANCife6j0fBRpx/tls4qHR4O2/vhkjTa+
kB4oPeQz6Ai5X0zPP4gh+dsqs9uazHjIrHNUbHKEkDnMzigKFIB9uG5/KyZQ
54FiwN52bOa9ggTwb1L8lgHGqJEkSL9QVmFVs/EoFLbbSYig6GUWIlpN+l86
jz/Xuvq1fL2fbWtZkmCN/wHv8ZcX
              "], {{0, 0}, {161, 15}}, {0., 1.},
              ColorFunction->GrayLevel], 
             {RGBColor[1, 0, 0], PointBox[{67., 8.5}], 
              PointBox[{78.18, 7.74}]}},
            ImageSize->{161, 15},
            PlotRange->{{0, 161}, {0, 15}}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[2.0999999999999996`]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]]},
     {
      RowBox[{"\<\"frame\"\>", "\[Rule]", "7"}]},
     {
      RowBox[{"\<\"centroid\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"67.`", ",", "8.5`"}], "}"}]}], ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"78.18`", ",", "7.74`"}], "}"}]}]}], "}"}]}]},
     {
      RowBox[{"\<\"circularity\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "1.1544818171891613`"}], ",", 
         RowBox[{"2", "\[Rule]", "1.1147862608038557`"}]}], "}"}]}]},
     {
      RowBox[{"\<\"area\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "26.5`"}], ",", 
         RowBox[{"2", "\[Rule]", "25.875`"}]}], "}"}]}]},
     {
      RowBox[{"\<\"holes\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "0"}], ",", 
         RowBox[{"2", "\[Rule]", "0"}]}], "}"}]}]},
     {
      RowBox[{"\<\"results\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"67.`", ",", "8.5`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"78.18`", ",", "7.74`"}], "}"}]}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]]], "Output",
 CellChangeTimes->{
  3.603282605633548*^9, 3.603283422620471*^9, {3.603284006173203*^9, 
   3.603284012386709*^9}, {3.603284298639907*^9, 3.60328431550565*^9}, 
   3.6032844812464933`*^9, {3.603285233023703*^9, 3.603285259394423*^9}, 
   3.603288034008895*^9, 3.603288158510023*^9, 3.6033795328073187`*^9}]
}, Open  ]],

Cell[BoxData["GetPositions"], "Input",
 CellChangeTimes->{{3.603288171313775*^9, 3.603288173115518*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"VideoTracking", ",", " ", 
   RowBox[{"Threshold", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603286495769725*^9, 3.6032865139051456`*^9}, 
   3.603379556351799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Threshold\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"FilterArea\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9", ",", "40"}], "}"}]}], ",", 
   RowBox[{"\<\"FilterCircularity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.9`", ",", "1.5`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.60328651424296*^9, {3.603379541680983*^9, 3.603379557306705*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OptionValue", "[", 
  RowBox[{"VideoTracking", ",", " ", "Threshold"}], "]"}]], "Input",
 CellChangeTimes->{{3.6032863664349117`*^9, 3.603286414081972*^9}, {
  3.603286492368918*^9, 3.603286493216976*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.603286393005724*^9, 3.603286414557839*^9}, {
  3.6032864912474127`*^9, 3.603286515717185*^9}}]
}, Open  ]],

Cell["\<\
Want to have:
1. Options based configuration of traking algorithm. 
2. sub pixel tracking
3. MultiThreading\
\>", "Subsection",
 CellChangeTimes->{{3.603284435992277*^9, 3.603284467864468*^9}, {
  3.603285345305131*^9, 3.603285362154374*^9}}],

Cell[CellGroupData[{

Cell["2. Sub pixel tracking", "Subtitle",
 CellChangeTimes->{{3.603285419531178*^9, 3.6032854268592367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoundParticleImg", "[", 
   RowBox[{"img_", ",", "binImg_", ",", " ", "id_Integer"}], "]"}], ":=", 
  RowBox[{"ImageTrim", "[", " ", 
   RowBox[{"img", ",", " ", 
    RowBox[{"(", 
     RowBox[{"id", "/.", 
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{"binImg", ",", "\"\<BoundingBox\>\""}], "]"}]}], ")"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.603285472537765*^9, 3.60328551977734*^9}, {
  3.6032879050941353`*^9, 3.603287938112397*^9}, {3.603288369811585*^9, 
  3.603288377583625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageToList", "[", "img_", "]"}], ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ",", 
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "#1"}], "}"}], 
       "&"}], ",", 
      RowBox[{"Reverse", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"img", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ", "1"}], 
       "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.6032861083356113`*^9, {3.603360819869508*^9, 3.603360845970317*^9}, 
   3.6033923616898518`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", " ", 
  RowBox[{
   RowBox[{"ImageToList", "[", "img", "]"}], " ", ",", " ", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
   RowBox[{"ColorFunction", "->", "GrayLevel"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60335908347232*^9, 3.603359212164495*^9}, {
  3.603359427308875*^9, 3.6033594295132523`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJydlEFqwzAQRU3TRRZZCV8gJ7HOEMgFClnngl31Dlk3x9AuTVIG44e//9gD
ZvjSzEj/f6Pj1/V0+ei67uf5vfJ/3IdpbsP8usqfdbmf+IB69hMXYPYTs554
Lc+W5KXmubrgy3NczuoX+jRxnsJr9W7iPIWzfnG+wlv/S8Xb4axP0ZfVXfUr
HHryHJezfhX08TyFnV9qvsJb3xH13zmc9Uvxdjjr0wE560O2rmA9m51far7C
W9999Q44nPVL/YcOZ/1SOjic9akgOx9Uv8MuZ99956d7N9y+09vxWss7Inj0
9fvxit9hut+GXH1fz7P1wYPz+np79+/qcn/w4ry+7if7nBdBvmM9++fri9i/
C10iyMPpQkzexOqevE/cuwFzf9R1vp46sZ46KV0DM9z6mP8AZjr89A==
   "], {
    {GrayLevel[0.], EdgeForm[None], 
     StyleBox[
      GraphicsGroupBox[{PolygonBox[{{190, 150, 170, 194}}], 
        PolygonBox[{{189, 148, 149, 147, 188}, {193, 169, 137, 136, 181}, {
         187, 145, 146, 144, 186}, {183, 139, 140, 138, 182}}]}],
      FontColor->GrayLevel[0.]]}, 
    {GrayLevel[0.18292682926829268`], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{171, 1, 151, 191}}], 
       PolygonBox[{{166, 107, 108, 106, 165}, {168, 133, 134, 135, 167}, {192,
         152, 15, 14, 180}, {185, 142, 143, 141, 184}}]}]}, 
    {GrayLevel[0.3048780487804878], EdgeForm[None], 
     GraphicsGroupBox[{
       PolygonBox[{{156, 43, 44, 45, 155}, {179, 11, 12, 13, 178}, {159, 73, 
        74, 75, 160}}], PolygonBox[{{127, 128, 129, 130, 131, 132}}]}]}, 
    {GrayLevel[0.4268292682926829], EdgeForm[None], 
     GraphicsGroupBox[{
       PolygonBox[{{163, 103, 104, 105, 164}, {173, 2, 3, 4, 172}, {154, 17, 
        18, 16, 153}, {177, 8, 9, 10, 176}, {158, 47, 48, 46, 157}, {162, 77, 
        78, 76, 161}}], 
       PolygonBox[{{109, 110, 111, 112, 113, 114}, {121, 122, 123, 124, 125, 
        126}}]}]}, 
    {GrayLevel[0.5487804878048781], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{175, 5, 6, 7, 174}}], 
       PolygonBox[{{115, 116, 117, 118, 119, 120}}]}]}, 
    {GrayLevel[0.6707317073170732], EdgeForm[None], 
     GraphicsGroupBox[
      PolygonBox[{{49, 50, 51, 52, 53, 54}, {97, 98, 99, 100, 101, 102}, {67, 
       68, 69, 70, 71, 72}, {37, 38, 39, 40, 41, 42}, {19, 20, 21, 22, 23, 
       24}, {79, 80, 81, 82, 83, 84}}]]}, 
    {GrayLevel[0.7926829268292683], EdgeForm[None], 
     GraphicsGroupBox[
      PolygonBox[{{31, 32, 33, 34, 35, 36}, {91, 92, 93, 94, 95, 96}, {61, 62,
        63, 64, 65, 66}}]]}, 
    {GrayLevel[0.9146341463414634], EdgeForm[None], 
     GraphicsGroupBox[
      PolygonBox[{{25, 26, 27, 28, 29, 30}, {55, 56, 57, 58, 59, 60}}]]}, 
    {GrayLevel[1.], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[{{85, 86, 87, 88, 89, 90}}]]}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {0., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6033588951779213`*^9, {3.603359136838805*^9, 3.60335921295757*^9}, 
   3.603359431805057*^9, 3.6033608502760487`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reverse", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], ",", " ", "1"}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6033605295715647`*^9, 3.6033605805408583`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "8", "9"},
     {"4", "5", "6"},
     {"1", "2", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.603360550509753*^9, 3.603360580907818*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubPixel2DGaussianSimpleFit", "[", "img_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", " ", "fit", ",", " ", "a", ",", "y", ",", "x", ",", "mx", 
      ",", "my", ",", "b", ",", "s"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"ImageToList", "[", "img", "]"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", " ", "=", "  ", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"data", ",", 
        RowBox[{"a", " ", 
         RowBox[{"Exp", "@", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "my"}], "+", "y"}], ")"}], "2"]}], 
             RowBox[{"2", 
              SuperscriptBox["s", "2"], " "}]], " ", "-", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "mx"}], "+", "x"}], ")"}], "2"], 
             RowBox[{"2", 
              SuperscriptBox["s", "2"]}]]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{"Max", "@", "data"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"mx", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"ImageDimensions", "[", "img", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
             "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"my", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"ImageDimensions", "[", "img", "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
             "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "3"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<pos\>\"", "->", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mx", ",", " ", "my"}], "}"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.603288427716043*^9, 3.603288429368223*^9}, {
  3.6033810085165453`*^9, 3.6033810096024647`*^9}, {3.6033810514427357`*^9, 
  3.603381053774654*^9}, {3.603384858322665*^9, 3.6033848634177637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubPixel2DGaussianFixedFit", "[", "img_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", " ", "fit", ",", " ", "a", ",", "y", ",", "x", ",", "mx", 
      ",", "my", ",", "b", ",", "sx", ",", "sy"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"ImageToList", "[", "img", "]"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fit", " ", "=", "  ", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"data", ",", 
        RowBox[{"a", " ", 
         RowBox[{"Exp", "@", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "my"}], "+", "y"}], ")"}], "2"]}], 
             RowBox[{"2", 
              SuperscriptBox["sy", "2"], " "}]], " ", "-", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "mx"}], "+", "x"}], ")"}], "2"], 
             RowBox[{"2", 
              SuperscriptBox["sx", "2"]}]]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{"Max", "@", "data"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"mx", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"ImageDimensions", "[", "img", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
             "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"my", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"ImageDimensions", "[", "img", "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
             "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"sx", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"sy", ",", "3"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<pos\>\"", "->", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mx", ",", " ", "my"}], "}"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6033848850749817`*^9, 3.6033848867920847`*^9}, {
  3.603388481767268*^9, 3.603388486916046*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img", " ", "=", " ", 
  RowBox[{"BoundParticleImg", "[", 
   RowBox[{
    RowBox[{"SubstractBG", "[", " ", 
     RowBox[{"GetFrame", "[", " ", "7", " ", "]"}], "]"}], ",", " ", "i1", 
    ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6032883248541393`*^9, 3.603288342977416*^9}, {
  3.6032883963006477`*^9, 3.603288407090522*^9}, {3.6032884728287992`*^9, 
  3.603288473756322*^9}, {3.603358425214182*^9, 3.603358432688052*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[{{0.007259073842302677, 0.05841784989858001, 
    0.10196078431372535`, 0.059607843137254646`, 
    0.01756535947712401, -0.02664884135472384}, {0.13467240554758475`, 
    0.2520402755696872, 0.3723821443471004, 0.29912390488110124`, 
    0.22392156862745083`, 0.1030959752321981}, {0.2634489693313222, 
    0.4499423298731258, 0.6451914098972923, 0.5401143790849674, 
    0.4296078431372548, 0.23441176470588238`}, {0.2477812177502579, 
    0.43764705882352933`, 0.6281481481481479, 0.5274509803921568, 
    0.4182001005530417, 0.23137254901960774`}, {0.24313725490196053`, 
    0.4277605779153765, 0.6119766825649178, 0.5096256684491978, 
    0.411111111111111, 0.23111679454390438`}, {0.12968536251709967`, 
    0.24088443888193545`, 0.35246293639406967`, 0.28521870286576145`, 
    0.21802252816020007`, 0.09908496732026123}}, {{0, 6}, {6, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{6, 6},
  PlotRange->{{0, 6}, {0, 6}}]], "Output",
 CellChangeTimes->{
  3.603288343546336*^9, 3.603288407802553*^9, {3.603288446347456*^9, 
   3.603288474398492*^9}, 3.603288849071032*^9, {3.6033584261948433`*^9, 
   3.603358433119944*^9}, 3.603376401717305*^9, 3.603379572470868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SubPixel2DGaussianSimpleFit", "[", "img", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pos", "/.", "%"}], "\[IndentingNewLine]", 
 RowBox[{"ShowTrackOverlayed", "[", 
  RowBox[{"img", ",", " ", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.603288441967371*^9, 3.603288442872151*^9}, {
  3.603289329403584*^9, 3.603289355866233*^9}, {3.603289402219099*^9, 
  3.603289405149671*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"pos", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2.3776535039556346`", ",", "1.9903149466548082`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.603288851915372*^9, {3.603289346725966*^9, 3.60328940579388*^9}, 
   3.6033764041955423`*^9, 3.603379576746011*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.3776535039556346`", ",", "1.9903149466548082`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.603288851915372*^9, {3.603289346725966*^9, 3.60328940579388*^9}, 
   3.6033764041955423`*^9, 3.60337957674937*^9}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{0.12968536251709967`, 0.24088443888193545`, 
    0.35246293639406967`, 0.28521870286576145`, 0.21802252816020007`, 
    0.09908496732026123}, {0.24313725490196053`, 0.4277605779153765, 
    0.6119766825649178, 0.5096256684491978, 0.411111111111111, 
    0.23111679454390438`}, {0.2477812177502579, 0.43764705882352933`, 
    0.6281481481481479, 0.5274509803921568, 0.4182001005530417, 
    0.23137254901960774`}, {0.2634489693313222, 0.4499423298731258, 
    0.6451914098972923, 0.5401143790849674, 0.4296078431372548, 
    0.23441176470588238`}, {0.13467240554758475`, 0.2520402755696872, 
    0.3723821443471004, 0.29912390488110124`, 0.22392156862745083`, 
    0.1030959752321981}, {0.007259073842302677, 0.05841784989858001, 
    0.10196078431372535`, 0.059607843137254646`, 
    0.01756535947712401, -0.02664884135472384}}, {{0, 0}, {6, 6}}, {0., 1.},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], PointBox[2.3776535039556346`], 
    PointBox[1.9903149466548082`]}},
  ImageSize->{129., 129.},
  PlotRange->{{0, 6}, {0, 6}}]], "Output",
 CellChangeTimes->{
  3.603288851915372*^9, {3.603289346725966*^9, 3.60328940579388*^9}, 
   3.6033764041955423`*^9, 3.603379576751943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetPositions", "[", "i1", "]"}]], "Input",
 CellChangeTimes->{{3.603288873263661*^9, 3.603288879638673*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"66.96153846153847`", "8.653846153846153`"},
     {"78.2`", "7.800000000000001`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6032888799963417`*^9, 3.6033764083435*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComponentMeasurements", "[", 
  RowBox[{"i1", ",", "\"\<BoundingBox\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6032889263132772`*^9, 3.603288926462564*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"65.`", ",", "7.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"69.`", ",", "11.`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"76.`", ",", "6.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"80.`", ",", "10.`"}], "}"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.603288926989676*^9, 3.603376411017682*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowTrackOverlayed", "[", 
   RowBox[{"img_", ",", "list_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{"img", ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], "&"}], "/@", "list"}]}], 
       "}"}]}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603288987338208*^9, 3.603288987339261*^9}, 
   3.603289035776926*^9, {3.60328936974881*^9, 3.603289384534601*^9}, 
   3.60328941536689*^9, {3.603376485112082*^9, 3.603376497912251*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitSubPixel", "[", 
   RowBox[{"img_", ",", " ", "box_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\"\<pos\>\"", "/.", 
     RowBox[{"SubPixel2DGaussianFixedFit", "[", " ", 
      RowBox[{"ImageTrim", "[", " ", 
       RowBox[{"img", ",", " ", "box"}], " ", "]"}], " ", "]"}]}], ")"}], " ",
    "+", " ", 
   RowBox[{"box", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603380355472904*^9, 3.603380385891234*^9}, {
   3.603380433157567*^9, 3.6033804806857357`*^9}, {3.6033810751314383`*^9, 
   3.603381084495323*^9}, {3.603384894237524*^9, 3.603384916369534*^9}, 
   3.603388524877994*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ForFitSubPixel", "[", 
   RowBox[{"img_", ",", "binImg_", ",", " ", "ids_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FitSubPixel", "[", 
     RowBox[{"img", ",", "#"}], "]"}], "&"}], "/@", " ", 
   RowBox[{"(", 
    RowBox[{"ids", " ", "/.", " ", 
     RowBox[{"ComponentMeasurements", "[", 
      RowBox[{"binImg", ",", "\"\<BoundingBox\>\""}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.603380500025065*^9, 3.603380611114197*^9}, {
  3.603380701202547*^9, 3.6033807405341673`*^9}, {3.603380912607891*^9, 
  3.603380949172738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"img", "  ", "=", " ", "img4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imgWBG", " ", "=", " ", "img4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ForFitSubPixel", "[", "\[IndentingNewLine]", 
    RowBox[{"img", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"FrameBinarize", "[", " ", "imgWBG", " ", "]"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "1", "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ShowTrackOverlayed", "[", " ", 
    RowBox[{"img", ",", " ", "%"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"GetPositions", "[", " ", 
    RowBox[{"FrameBinarize", "[", " ", "imgWBG", " ", "]"}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"ShowTrackOverlayed", "[", " ", 
    RowBox[{"img", ",", " ", "%"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.603380620644742*^9, 3.6033806906812973`*^9}, {
  3.603380776496306*^9, 3.603380803847817*^9}, {3.60338091599214*^9, 
  3.6033809214629717`*^9}, {3.603381103208303*^9, 3.603381158199239*^9}, {
  3.603381410812955*^9, 3.603381413328669*^9}, {3.603381524105098*^9, 
  3.603381560239101*^9}, {3.6033816987106867`*^9, 3.603381699671381*^9}, {
  3.603382878823925*^9, 3.6033829308745747`*^9}, {3.603383767279533*^9, 
  3.603383802645015*^9}, {3.603383855555133*^9, 3.603383880380217*^9}, {
  3.60338393106907*^9, 3.6033839313141823`*^9}, {3.6033877335303297`*^9, 
  3.603387762775424*^9}, {3.603388734167717*^9, 3.603388753460411*^9}, {
  3.603388820011565*^9, 3.603388837770214*^9}, {3.603389862452257*^9, 
  3.603389879829214*^9}, {3.603441701458929*^9, 3.60344171111479*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NonlinearModelFit", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NonlinearModelFit\\\", ButtonNote -> \
\\\"NonlinearModelFit::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.603441798538101*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.0000942251816785`", "1341.4012748416415`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.603386181101638*^9, 3.603386242555447*^9, 3.603386428468719*^9, 
   3.603387449254716*^9, 3.603387585668025*^9, {3.603387722820709*^9, 
   3.603387763092987*^9}, 3.603388528647312*^9, {3.603388722033155*^9, 
   3.603388736769751*^9}, {3.6033888235912027`*^9, 3.603388838175753*^9}, 
   3.6033903224651947`*^9, 3.603409026482266*^9, {3.603441690165697*^9, 
   3.6034417116038427`*^9}, {3.603441749076435*^9, 3.6034417667821407`*^9}, 
   3.603441798543688*^9}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
NzFDRbW1Goyiz28vTmqEsyzjUaSIZlQpOb7vsGcpHM7KyaVt5sl31fkgC7vN
nP8mJMMgXw4Z0q8/q+2oQJnj/V5G3GMwbCnErvWmFexyLwf4yPZA3x076Wdy
VZCXUFxmylGM9NukU3QJkZD5srMiJD8bk74lnVHb04+MN7ZkKgYR8Tv9karc
i50oVfOcXzmMhld32157n0rDvKpoKY7sUjwUc76SyEWAa2zlrylpVSCw51K0
qv4Q8Ky66s7dKEeJQ2fel6w0gNv5+pFQyxossF4iVfGWwiEzxUE351aMc3Rp
d8+MAMexEwNlhQO41W8fMdQxF4Qjn2iHxZcgy/b0xhD2Kvj9oJ3jYnsFdE3o
5p8aakaRa88C1+Sb0ew1NVX/Tz9c5VDqyfhGhiMid/6L+m8OSHEdWVOXluBG
axol5OcqqNXhpztuX6Da0btrD3kRwvndTv02mgVO50PKN+3r8OGR4v0H+KjI
pO4ffHa5GTkeMpAYTKjwVT3H68NYP0asGJZXepJg1FTm6NpoBwSf3H/o8S8P
GIi8sefF6UGUPSL6UTveFeK4LT3DMlxAn1HpMtkzA4/vnLhqt7MJ/TjbtGce
lmDv+87YgckB4Ld5ulVoJRJ+BBBfGHCPYv5Vh3f6B4uguufF/jeEOtQ+Gh9T
QmiG4ETGMwc4uuF88OUVuBMLlpfdRuKMu2D71gLAmWooKuq4Pne9EoV1XgK7
XD3sY6O03aTUYvjOs0F7+LtRS2/EzWeNgDUlC7X6LlW4FPBnR4U2AbP2fKoa
WG5ErHjM0MuTBh9sjXvt99UBUepqI8v9UrjXFh10yWEAC3Z2393FOADPcn/+
fBeUjG82hiZSv0TiZw73ZvLWBvh0VmFay5kAK2y61l6bPTCX4hXuP14Agm/O
ekl2kWDAh1e0ZF8baNTw3tLsaMEdu8vzFMcLMTrR1fyteg/8m7nMcEW3HMif
RR4mv63Flsdx9YyLZdiV5vtU0ZSwme9a74/VIOzUpv+zYdCGTdXm7wvN2rDm
yQIf+2oc+jQYkjn9i5DVnbxdgt0OlJc2gbm7DrisHh8JbmpCuflo2YB/Degv
7BCcfaITj5/qVDpFboOZo8InHslT8Vo7Y5CpVh0+iOfYb5hCgNHHZx/WlZNx
oenRTY3OBlTdbU6XnpkDSz4fNdsc+0HbkM7157UxPDfeSl9/uQuZn411XQms
hN1NJ0kPz/dB6D2tklzNathgGP3QUEjF90r0KXpDZPzD9ssjr7MOt9t5/c0U
D8G0t/bn8rYVgsOsz+mvZ/PBdWHZ9kR6Kz7N/Xm57WQ/qEyWKg/sJaAkh+TG
UDsN1AiT21h2dsLB7trqloxabDMW6OXUaQPjb1GRJ/YT8VPtT05RtWT46ZTW
plYdhdfjQOHrjT747UiSNK0LBPDauNRwmwafR3g+DDLWQnL/+6Tr2h2o7HWK
7u7jUbxYqPLT1KUbpkhCoh9ujgFDo5rD565wLCkacieGeENcy/hID0sLNp1t
e0m/WIvvYu47Pq1vAIvZG9UOU2S8H/6RIDRSDb8Gvmd7/qjHHaOLX0l+sfDN
cGlAmbMe2CN1tBTUenBxPWDr9w8TuEoYIX/2H8RBtnwRB84KmOPeWLEIp4Ip
ZVpTSJ4Kcp+PnA2Ya8ctYbkLXddLsLJsOfC8Zjgurvj2FRyshbds9SKTakFI
c1x4IqHegmyflFmN7Tf9inRJlHTeBIxnPjy9jhT8oE1Hp+eRhmZes7vPv4uC
T51xEznS2TjLbRrS+iwLT1WeWe8tI4BUwgHB+iPD6MkgcGvxdD+W+bTY/FEd
gITdewlnRvtw9+ULo4ePhOGSZt8vE/VuXD0vEUpLK0M8qmloOdiBGjaiEg0i
Q9gq89y+RIMMxipM8qfkWwGY36yeuFeCS8HVr1sVIkCb2TnYmrUTl11frfM1
dUD2W7ilG0pDRisG+/u8jcAuPTnXrN8BUTo/K44S22D5HGNHveWmHxZkKYcx
1ID98z1jzELtOKCVoRil1wnqZ86Gx+54CdXmxUqTxBp44fbseZf3MBDY3I49
kf0MpeOfvYwFRuFYr63yRu88RIzOHFpknYOLyu/vbrs7AHTdP/8VJftg8yCF
/HFLDRDEFg/wLeTj3zqpDz2JWXCTnBY7RIzD5d/zRPWXbqjhOihz8TEV9Hqi
bu3n6MLPD/QdyTyDSFVvPO0n3YaKo7t1H+fWYf+lrUd6Rztxmv6qxHWXELjF
tveTVBcBGibH6wJe16D9MdteOb8BWHlearPo1gU8px69vpvchOXrHEfff22C
709HH9ICW3FO+Ycr/41GZAnct9XC9Q0WHDyqe948EmJrJS1NZCphPlDq9qQT
EQQfGAhS9SkQ1/nD0jy+DaOKY+hPzI3A9kSBMkPhHlSxfJV6Ro2Msgk87qa0
ZhSePfi9mqcT2Wd//+VhrsJdvx5abj1ZDzQBLxarqXwokezYXfTyME4Eqpvd
H++H7T91LmpUd+EBIyEOnMsFkQv7V9OcWnBFQne0P2QA/9sw2MqkRYAD0lYd
p3RGIN/GwCm2bBQCIhbdK780o26VvPvCWhcmp/ZNxV15BXXWUWXGSIRHE3Yu
rzgjsWJFR7Y5koizrP6+3hYE1BXXYP33nYaDYto8w5qeSBcrQbbppcBp5e9t
CeVEvGEkdrnHLAqca/kqMg9ogveq/Ava2xa8voc9tvspDZ8MCj1Xc+kFProD
+1kW6lB6bjRISaoOfz5ZfhU4Xop+Cb/F76s2AolnwyD97yssiJuLEymqwhkW
0+Xjca2g8kNoWfNZNz6RKEkp3tGDO3/UWXMJ0nDZ3/wlz6ssCB+z8RxpbMN5
68aJC58r0X5k+AwltA30D+zSf5rYh7xmQfN2j0k4ceNO/0JfHXr6hXa+ueoF
t2a/7HNmK0H6281c3/6rgI3Rp/zbLSqBXSGv58tiCUSczH4k5dgJ31zaBFgc
yjFEj5J/7WgLiKvzHHEb88W8+b+vPRPJsJeY+fP2YBdqWl58M/Q0HlPH1Ws1
b7TjsXt+THFLFJy7/EZCybkRRi2Neh4n9kDN4qoWa20pqr3dUebl1o6knzzf
871KQHX7pwrSyU5st07+aF/VCMu07z6BpzPAucggMyExBDTtKVdUBYh4y+ex
NY3rFZjo23DRGVngMJAenr2RiB36Vv/uDxfBfMZoN2NENNrteZX8Nq4D9lM1
PQY3/W39957L4pym6OH0NfuNWR9+2PLRxTy/DKwE6w6xVxSDx929b84FkVDg
ayBOejeB/djMPj6+VyAh4tabXdeLr5trknR/heAJ1f52Yak2JBDCJevHO1CX
eXLZn34QVB9H/bpzOBcZONJuGA2S8E1hhMfx3BH873pgi6dUPS5c/bB7n0Q2
UEPijnUtRyAX19eh38QysLPMpLeYqoTbxRVZ72dacabM1bROKwy/livv3uhK
B2Zqm0LNTD2MrZszCtlU4pTVUaWJh934XXZNNPgmBU/FUFS+3evFOxfcjt1i
okAxTfucf9oATn0IvBPxsQ2qdv2WafQfB86A4uFkexJa5RpVK/n04Elvr6Fb
J2pxwcO9t8g9G/7KCMco14yjPT3dr2+bfD95bG3itOEI9DKN8/1WrcRr5MTk
S80N2D7AaVssmQLMXW5md/+Eo7jGWt4J9gY0/LzV88D9UXShf5l62P3/e1o7
PvCICiW2YiLXRwchvzFxrIxrEnRMpGNmBgZA2CbtQYLoG1jrOtj3JXkMjBiu
y/bUU6Dmw/GRHLF6uPuf05ebOYMQeG6M9+z5fLiYPFJsLdqDV413WzJe2/Tf
d7+MRZ7mYZt3/03LuWagKbSeiiT2g82Pms73NCKIe8WWdlQVgPrvkM8kmxRw
8v2jXh81iAXJWdevzfRCn2tvKeR54qPjal3yu7rRp/e9EXm1GI558K80avTD
iTHXGaSn4MTi7NLNHjf0rfnwlCc0GR1OD4hVPinBsQqpUpNjRGQG3ruqMu14
OOJc8hQpF7gV+G/ufdQJStdFlo9S+iA16JCc1d4BlHR6fvxVXA2qxV2TQ1o3
zPJd3CvcPIr7VHdd1R1B1OeYzX4iUYcvM9cuHNpOg2WiYWznCAGOZYUUjStU
4ffgt+Hh1h3Av9WDxqV5HaImei/d8+4BL7uHD88cqUXlLTrcGk4zqHCYjzHT
MQKvrN3h1JRshiUdVhffoQG4F+65p8OkD7SDGy9sGR3B3r7oPVdTqdALP6Ri
v7aCgofm7x3SLujOerCkX4MG0VwlJwVp7TDh30g559qHJMl0yzupFPRgK+Q7
W+uLdybkfy5YU9Hj7fU9e4P6werOF78dghR4sj3TupZUDacU91J1/lLgF/86
TWtsBtjeUDpVhQh4f8/Ow1Hj7cB7JGonJT4bk6Vt/nuA/ihFuN9Hd6cM8x+U
fdvypwYv3JP73vovFq7cFYoMvFqDZh8TO+W+ZqL53U/3n2sMgG2Vz0l9uwps
eF8jH/U2C0WNhDwKVysxwOHCbZ776XhP+mqbm1AnuPhXM7HtJMO6AdNhQ7oR
HJWaad42OomsPvSvf+xrx2ADwxNf2atRg72lLX6agJQ9TrdDOyrh04tnqUVh
mRioVkpOzSYhvMl45SjZjInEePXqbwGoWHBvkvSlGigsDcpvbnZD7RBXH/ld
DVroGYruPk+Gl5e/H/6yhYi79Xh5xuU6gPXI8Otu2TRwuhFd2bArEp3q1g7+
Xm/ErRa/mR5KdqGsHcdvxGjoEyCKr33uwWyt6W2/PjXjwpHDORklAbhzkbiF
LB6G788JFYhd6gP7ndvmN9gJyBH8olOergWknSWiax1KwOzExvTxd2UoY6ko
f0qXjNntbUzH3g6BSRr30+oxGp5YXOP/kd4FZSqHE27kd+JCnQZj+I0+DOoV
zJKo6sdvGgd0Yj3GYSR7Vr3xYzv0R7mpltuUwLnFx9O0xTH8e3DL972lFZD6
4Mh9k7QKELkSeEiCpRZcSbazt/wJcOJ202+RulKkD/A0m9jSjHn/ZmPojmeC
2Hi1YmFXPfpLb31k6doH/Vfd67RtEK+N1TJ0yRUiCluTOBqyMG5G8L8/PCPo
cCmjw9O+Al2G6nJZzyVime7uuW/DUWh3/Z+r6aM88JhoE6cTz8SP+pfa7YVH
4VfO2Pxe8zYUn8pkWNHtxNdDf/Wx4g3u48/W7NobgZIme/J1chqw0mEmxJ8S
hvpSdRHXY+sgI8h8kK67DL7IaMzcVpve9PKwup5vJDxw5y7pFUs1Du3aPnP9
ThiUe6/cxl19mIQTQheZHFFFbY/07/EpfHW48rf193R89KxmlnqpGkfmSblu
l+ORoNKl0Ws8CAPm9NT4f4Ogs6T73dLxDbyaOSmsuOKO3UuDpltbh+CulFq/
92YP3PXxVp1tTIXmosxI6zkP3OMn43P4JBHmnYLSRVSaMdXg692KjjDUHmru
eHyoGRjEw0XOrmXAJ9bsmo1riSALZq+zNSfB5pVrl496O/r6nipfmu+Fy/Os
VQLBbXBhpq9VIKMV36/UTL/VbIG3iuu3+8eKcCtndFaiSh+O5dJT95vlwJTG
kdx4jXLMXQx4yBQ+hUw72QxGjalQXfn17oDlZu6PDPHucRyG2EYVej7rLjhe
mnHRrrgC1RauVph/IsD0aZd0ycZxsOQt4d1/tBbjlofZiK874KO0x8adZgq8
PupwTmHTJ5ZUA04Rzcm4Qq+gYbhSAoe4Zf4N+gTiH5bvnn36qfBww0y2NbUS
byvels+MLYBjUQdKHBI6kP+jQ09ZRAYwr6j6SLvSYOjGw+ExlQRwyA3cnR5Y
DWeUTooEDr9G/8IEq8nHbfiUaj99RCodGQ5fdNYIs4RHKjf4S783IaPzCUXb
Nn90/nV+/KQBBdpGuWsxOBuOV8SPFkUVwHQG1zuVsk4QlazT+rtWCz57mJ56
fyRA4N/dHMSnVfiJiW0t/HIF2D1rPVK0vslpFYkzz56RQHTL94PJ61XgwWEh
qZqXj4XBng3XiYXQO9mW0z1RBKcO3hA3nC0H15Aw7+GjNRhtW5GUt6cOBkN2
7DA62IMP9B4faHwyAkcliyGveBDKJXOj5N53gENKk+Z9qU4k7ViMv3y+H69j
/3jKr1Q4/Fk4x4dCwW+1AkDVpuCXmlF9l7d1+CFh28pBeRrcTDm+Mv6vG478
ETlNJzQN8Y2GUu5nClEp8Zwow/0E7LzcHa79pQva5lTXjh0eArMH7oU2Zxtw
5pDD799t7TiclfvvVVETSrHelYrQ6gGmIK7BDHIFvK/LZ/6yOwMrNTqjS5fq
0Yv/vRKraxQKctHJeur1YNKlq7zlTW3YIpbweD8XFZnOHvU/6dwFKzPhTVtz
O/Gd14etNrxZ6HeDVcxPkYp6p9/bkx9s9kfaYU5SbTs+fbpLwPtqK5RnGBa8
rWmG3+p+qcvtVEwOMJslh5VDsLSjvS5THjj7Jqiz1jdB55cI40PvCaijwXj4
yMoESO3V/zj0owOEstOLAgkDKDbtz0lXMgpqyobybTk94PinRon17yiU5om/
6KP1YddF+/bvy81or3JUgKSWCG1Piyq8TtBw5p/K45SoTHxYmPHEpaUf/Nft
xg0EM4CB4NEq55kGvA6RfrlPifCm8/a2Q0xFsE92e63rYjWeGBD1j1qaAG06
kUc1byrgl//dtfO6BJzzvHDDtZ6CSvwWRdXnOvDKji6h7DgCxstpEWwEy7FW
oDzt4uAtWBT/s31AdgR9Qo8l+VwqxJbv1xNlxnKwvOKzl+arYbRL3sFwzawd
mbj+2DuyUsDXsX+m2IkAbYF2ds2zofiEm6rapt4ENwub1qVKyyD68UjReHAK
sK91J77OSkY0nH/RPFoC79wXHke71mMxb8xl57xUrOF+OVJ0pglyX9d/vsrW
i8um4jMyDxGSGVy6m38QweT0wvLng43o9V0uaSC+DZj9pxiD35gjaZFulNJP
g9a75U91StLwbwbHWzSuAmeeAw+eU6vx9dZrRs0Pm5Du5jbCgmE7xmVkh8xv
mcD7x0wTyykkDP86q6ZTW4CCG8WdrUoJGMykM6kp3gcXtj94zlhKwMc7eIT0
j9Nwh9ilY1JljzDqUmXL993DWL+nI9vItAJNSNFLFmeHQDDEfPhIOAXFY6rr
Fdj6USeZl7VFIBzG902Oeh3ux+RnlLwt18vhO4mrf1WEhipXWbbYVg5D55s3
aefqBnC/5H3Tz2ItcPWjnnlNMxm1lxKlrRuzUcXaq8ZksR9zrNSc6dszYb9U
G4Wi+hrpyj80Gix4g+A/eydL2UoIrfv2aOMcFd8G+rtZViXAp1O1CnNEGrAU
SHbn3CjFFmezhjmnWmSqeMWz/RkZnlYo09WcI+O3tW6Hm33NqBBCvvnrsh/6
aT5S84zqQw1+Z1s7nlK85KwiZebxBnntJhLqHSj4yP7hOewhwb2vsguGom6g
7qTXsNUtEC32lzCGDNaC0sNTUeu5mXi0nqCr3dGGqXl7/Tm/J0DxQc3986Md
cO2HwZM7tE4UL5S4eEOmCE4XCEa5DGy+261UsUiiHuQ4VefW00Oxoiuor+N5
NfxM+zXHFUdBU9lEntVPabj4+RGPz6lBjN5ekO3wpQVNXVp2NF0dBg9mqZSq
gRxQkM0rnZdphZyagBOpWALlx6YsnKZH8Z6br75KRiuIqZvfebGSgjLt4TIU
h2z4fORkT4pNDfxSq4y6rJcD54+dpfYa9aNqgG6Pz41mGLJdvUMmDCPp0ddO
IyYKukr5RTfdJyEni4LTzkdv0FTQxb9TtROkp8N1k5hn4ODaVvOGr2Vw/+zX
jMPeVXA+5vXZnwY0aE+I/Pa3qg+FKkpTHjF1IMNqqflu4XakUTp8+UUQ/Bj7
xZtrw9Ava/3mZiVCj+L++egrnTjUftCqpf4lJjGX5++u6EBtL6viKnUKmqhF
7GCWq0fTv6Ebu0QaUOXHw9yIUhJqVDYfqY0eRKOkrT4OF4bx+qeXOTmMeThW
pXzyA1s2coi5yCVQaehy0zSFd7Nvu9MlW2u/0nBD4JC/1lUKnA5QGjo9RsDx
d08Uknb1YHOBpKrMyW58aPBXePlwDY5pRS6uRvbDcmput3ZNBUwEN83EF43A
NoN/s3PqRMx+cvFVtVMzpP/M8ztUro+uB1yzhvwnYGzl8PqCTSr+/D4q+Z9E
IbiOG57z4XqH29KvjCVNDiCvLOO0+EYXPMnQ2zjD0YACtzVpnPm1IJ5pJfvD
qw+PKU8d4CLmQh3fqbzjOISM93YHUI5TwXTV+PpCOBFUmZ/stb/YixZnZvb+
PVqHd8nXOB1Xe4BF+YdMsS5C8X+HJx0KMrFYNKJU6Vo5Dmq5j9960Ie7AkJr
FZ4T8NAjjpta7zLAZiIuYa/OA6wo52WRJFDgQFlOTTqmgXLb3I7zk7mb83pE
33qIiDP5KaZEUiN8iD3XLhSQhb7EYgXtaAIUc05ur93Wg1tElJc//ywB1aCQ
VNWkLrDO5hKcmR2GYEOdU2XazUBeombnkrNhzj6a/+COKRC97N7bdiQVikLE
g5zN2pAUrlJfIlwK0ntGXPa3ZyBbvvzBtrg+uP60aT+JuxH+alAuJmzuU1fQ
j/FyhT7M2HfU+GxHEQSPWrurvqQC5U/GUbXwdEzNjd2x9Vc8ONKgTj56HEfy
CJ1y/i1QuY8lf8IhDT1jjjQoXigC5zav6rh7FXAxXfFS2N4+bCmLerSlaRBO
w7sdVxubcNfp+jGqfzOeGGb8YLmtHN028uQI18ohS3eZoya+AtcsNU+Hfu2A
6vyxvV0p2SC9e64mhqsa2Cd1J4f9CJA0pkWfXtiL8oT8zQntRgmfUd23IX3g
e4RLiS65ALZ83cL4OLwT12sNpmi7DeAqa3h9onQ1PmRQvpx9qB930l7pePOT
4A9bT+Uv525g0Up8WeTQCZ8rqHlr2u3gzvbm5SHeVrjkNOm+h7kSBxyT4h72
ViNv4W66y83p8F6WVyptmQxJVh2HfpXb4Mm02+SjzCEw+jpr6uhKAZhF2Kfx
7GmCiPKIvydWvHGB8Hum6kAEKPpbj7ayDeDWY/8tykWS0Pnsy8DKZBI+P3fk
Bv0Wd/QpOMAsP5wJhSHXMgweFgCD9M21w34l+FyLrtzyZAo8jS/8j1G1BlzE
QzN2yJdgrZIN6d61cEhJ4Nz/Tn4Gku0dDp28GwEOO0VI9F008GhfM+hhzUZ+
gdvCwoRXqMbkeH9ljYSFD0P4uxnG4bD+6sujyaYQn2g5/J2JhP9d3finpULA
sGLB+A+mRFRfKzZdD3qDPBQR47nJEnCM4zXnMhmEpiyGmsncIdA5Zpjz4081
3ta5se9nQScemp+/0LyRCV65wgGH3Klwl/98vkBxJTw9Jt730cgJ72haK686
kCBExDsxwLgFmhy3h9XfKYJDfBIxcSzO+PUQp0Tu00qs2HLylvAZCtIxM/IO
+JHhfOp/zX0y/VBhOryDwpeO/xQx/ZJzDY62fhnO+ZaHDc0MueGm5TD954Z3
f3Y25hIfb8xuENDknuoz6OuAuc97zzVurYDfhpkPSS1ZYHk8RUJbpQ9eANEh
dnM/vC6ZB9t87cFbDZ8U6n26IcCW/zl3Qz/2jPFcMTjVhS91Xvx88K8E5jtu
5X0K0YNtfmLvZIZJyP4rt2fMxAeY6JfepS9RQOdeWOZ9ll4QDeywMNvWCR8V
BG6tCZOxgP3Tb/m0EuhuS9XnZ6+Fgdw4CaEj7cixr2OZ/XMtpPHHUh0qWtBh
N0tMkX82nsqN37jspwgWia/9mtwj4PSJ3WeiXHux8m6fkG1DA9hW7uyOkRoD
Wg79QOymt/BHUagjVuW4sXbhG/GWDw59kjJ6N9EFZImYgKfR/ehX8Z/e+4oq
5LraEPT2USOImnRNcSdX4psGMSMj8SY0PNPxtV2wCYzWjVFhmooPHwvX/w1L
glvHd7U8U05D3+G5Ne6vY/BReDa1lb4CedSUk0SU06H8+CvpltBOeGgqvFZN
DEOqfE5EMacfcn0bHrihVAefhI2qT7qMw5qn/RVBFgJOvpQkXKxrxSeLmdVz
OQQMks9ZuV1FhQeXT2RxxyRjQN8P2y/PCDC/8TSWuykZaNkXPzu/rgDX4EXZ
otAqsBtfVvnysgUSuCZfXihoxyNb7nHk9LQjI77I8xyiwnq8pSZSJ0Bs+eya
TNhmr8rvysgf7UGNdon8t3ebYUe0K8M93j5ESS7uGYU2GOCMeUuiywVHE6bA
uAO9WBIT7kV4QQOR5yWVAhlkWCeK39IzrIG2afKV0vxmpPz4NOx5vgXoXl8c
CXJKxNnni9z1hFy4SOoR+UpsAafeH1O5M3nYdYsv/kd6NfZnqJmVpNJwm+oD
l8FTfVD88okSZbUfQhdWe6QLu8GBqXqkNr4ZnPIu97T6IHr/fm8mH9yKVels
bQtOIRgcZtr0H9sLzHuqelTFohO+fdH2vkFOBZlmsyH7zgTIvqUeoWaXg/Hr
h3oH2smQGUnyruathcMiYes/fCrASv59D/ujRHjrSilRqi2B37kWHZDShZnt
SRG9hpVofIbV9LF2LQjULJMLdIrhJeN61ZHIQdg1yqM7tNCNq9zshaIO4sAg
FbGNbaYP9BRq3zAJDyIfJed09Hd/COW4eORJXBsIPAq5pXGxENf2+xnmMFcC
iwO54f4ZAszMB1SRLlcgoaZQ5LJKG/Iuxi7RLvXge96BAcsdxajeJZV5uqse
RGmXlA/wjIDsdFfuYd4UaA2RvSis14fU28xh9a4EpJu1qFk6kw3fffSZUmyy
kLIK+5ZcaDiYlF1eOzsE5qdv+aW5I9iUDyzr7R/HqVyeXP7sKPzbdujUuOoA
Tnkfc+hkpGCafRzrPZcy1NQ60lP63AJnaohBTpwdqLLwWq3sWRXaUx378vgi
oSK58nXfiwG8U3ZH8dZ0J7JlHQ6zDyEhC61XO+RUEwLXbKGbeDMen5lpuJ1T
iekTjVcaRruhma03USinH8/mOacnv44CaH32aUOzC3T/eL+9UVGJVw8/e1o5
QgUpem/9Tl0apM0SDPpPEmCZyZaSYkQBh/1v0waTa/CgfYLBfTU3tEoxa94R
kgnP4m46qAfE4Zj5Y55nfK34cfxnlr30IL7uTild/lSFsT8krId5e8CgQNQ1
s4AIX34znA48NYQfQxl2TD0jYeOdG/umrmTh3OqhsQiLTR408rI8NtgPq1Uh
f4N8a0FDrm93onU0HAg4mGv/XyY+at5Vc6+sHg9NUeaLfQbhaFbCpSCfVnyW
d9ZL51sR1MROrv8UzwOj9Ju5RiEUvFAdKnHkdQvUCWXVT7/oQZPrSUp9Roi8
qocyXh6zRD+3gJUzr2vg7mkDR0eJYcyUOebY/iAF6HcyOZmKkuHJcbLFrysN
mJdoZOZ1logk0WbTSMkGYJ076c0umAOCw2u5oV7leLI01OK7zDO4atWq0+XX
jDtVdKeFuB7AB4Ey2c8Py+Dfr3IR+DeAKzVqD/kuZ8KHJnYRfZtOPJOvxn2D
qQWfhQml+K13oAXX6cdvmWj4vKb4kvqHIijriIl+3FwLghwX/leBmYZDoXBx
HBGVtZRSlhYGRTfplopTaUjdNtul7HVvbrQopbJFaCFFZF+yM6aGGdtYzpgx
tmEMBnPREHEpEVEJ9Xq/nw/nPM/vnPP8/i9emfHgVMtb4jCPBUds8nMGl+rL
Un0uC8SYmBv5ocIzqxCvi4i0vNWqB7VNzyaCDbnAtL2YufN0DPaNmguzjxXD
ispq7hq7TvRLHlbyravHmLFf6uIlHAjrGlX3Z5FQ58ONs95cJsoS8skmP8pg
1Z/L+E1LfEfM+rwPm4hCv4P09+OFHPB13t5zI6QNyOZqvTm+FegXUDUfPFWG
o5f8ranIADHy/tTqjHxs8KGQc3MrsFykX2tyDQtvsz4Z5J1pg84pTq/A6iHw
0ikmcm4CjI87r9JsXYtjOmnj3ioNoF57Iix2tBUaGpYIN6MjtV3k2ahxCV5U
rZrKXJ+MxgEHHvU5tmJ1r4WbjjAH6HukBDNRIchNl/uSeLkccjbNuUSIvIB/
/6xb5SsZgsW8Y0dc1VthNUczgvWBA6Z6/Rs8DBqwpF+O5/OKg9qjOrrJ6d1Y
/FDdMtWmC15pm027dHtC9bXX9lrRCTBCnKWLfn4D+TRtmpM2DUPtLDLnAwsx
UM1cwkMghLuzDu+X57dgb/H1a30rSJDe7LD5dnEnhDm08N/sK4d1RMc3DB4Z
KXoKMv5HXwNZrTRsFSUbmI2jlc3ducioWfdsU2oPcLtIqyLiEwDtV8/c4FMx
6+5Nv4E8NnAuXVP2VstEx1RCvPspCq4xqTKlr+rEmzvN3xpa8+CYcfj87+R6
9NXsywrdwkHB1HzTGiEThMYrNigI2dBhAjFS4jmQs3OQtms4C528Bh/2J9SC
3ve/55+kF+OgudmF8LIi1OLZ8Up4SaA8N3wuL6gGZ5fdV22RQ4gpqWrVfsCB
IFfPRZ1+JqxtsnLMlXwKtaYKuWvkS0GacLjZ3mAAhgpP8ETIJOgOrVYxuxaD
jdObAr/+aEen6Iy3QStqIelrrDnnJwtlftv+8sv2Ski0lObL8pigVkE+rBdJ
QUWj+5PNbuGoViHJvNG65HcGdAc3tdKlfe732TtahbfW9Nute9CBd31WjjRK
0dBITqDqPFmAxB3E3nBCOioYfhxqfF4GKmISYoMLdbDBJuJX5B7y0p0RdfTl
8yA8cOG/+9JFeMMiMlv1Zz3cunx88f+5M+GnaM6FtmRIUU5cz9Ctgw+05MzC
6AIknCjcs1+iEr+mUK7+WPKuO6GypNOahfiMW3FuuJ+H2qUyHMqzRtQhp4Zt
7ejAHJkImbqxSvBscZvZl9cBWY3HLClTTdACjk/y5prwk+FQrJJPL8wxh1zr
7gxg1ZtUlxOfO9DdXro+xHAAvltU5fU538EUl82zlhYs2M9nawkP8iD+gOzB
WesyWHtEEfxOLfE/r8FjuLZDDank8GF7HsQl5J3UaqrA6w5Wjk/Ka1A9SWNu
W2sXNpOw6zOJgn2rLVQ8tjJhmpvgPBRGA/0Fa6EysQYmSK0ZW7UokEUP2abY
Wg90ok+7yeZa+L3K8Oeg7UXUKrPO2XY4HX8mnUxUtyzGe2YOkoQvTFRQEyrk
L/2Z2GKWqkmFBdCDPzdlXnqO3dbtgY//eobEaUVfT1IzBIt9Sy66Eg4yjvdO
SDUy8YxtqI/F6UrIWDQ6JtRpxu4VFnd1PNjo/vJVEnuWB1r/5LsEFDJAXUeh
ulmXDTjmv3/rQilskZq2WkZMQJaeWU3/6SLIH2E/jVfoAELXY1u+fTfeOVZN
TdWlo4uV6eKL6+1o/EfmxKfsSoyUsjKsFhbh8QfeG7v5XRAX1Frp/56F3ws/
Vav4RGNlcaqBpmc2DjjplLZM5mDNdIPvfsscJBhGZdhcKcPA/SYy+omD6P5s
5eby6X/h1v1269Oy7SC8T/i4SoMHxKAGQ8klPzbxvh9DiOuEqsaIR3HxQkDH
/rV5j9uQse1jd014IzwyOUngp+bj7h1GRaMxhUjtGKgXm0ZUSxu/aEiqx7EZ
V+t3Dm3Y0lSacc6MA5r8mZQrhwSY4BG3LGG8DWc27/Syk68Fu0MLszVDFKhG
3WJFUSvUqPc5NLHyNbjWVKvfS6XA7jm3MOb1Jghtbfmuv+TLt7xXO3ktY8FK
l3fnL++txKCp70ZiEWzYLV/g+usSB1YeURZUjVvg1uwimROjjzDNM3yH4sEM
9BWV5K53KgO8w5HQtOdh1L3ijrcZbHha1kWKPEOHHWLOYbLaeZAUkHLoeHkj
zh8QMqc8elE582D72UAWDGzXd/zl3YNnxg2ti+VogPG3JbxsO2A/KbqhjcqB
0ZCC3TMkBvyXbqxUFJiCn/mWZiINJdi/WPl9600qKjuJrPSfpkLD2qOO+R/I
aBNG3LevgY8/Jv8oO7erHD3FMgQVPBrYZz2m/sByFEZ+FbjLsrHgpNUu1ZEC
MLqiclf1OBMra3hhf2h1IV28XOJFdzaebZplBhexoVS87+RLVib0zNDuEKNZ
8NJ3IOq5fBF63dWOMRBrBn+bbCd1jyaIkpNNO/ggD1aHhDjK/9UFfR4bR1+u
ZiDFq2lY0p2KIdJqI9FeiE8Z5eqd3lx0f7de47grH2SOWlSLxTXggRf3RQPF
AmEoSOWQ7dFEnNdtTiZGI2o+Gfcj9LRg6bULVnu12vFIrnHGWSIDiskbuX+u
CMWxdX6fTTKY8DTIVPDSrQT1aMZOxy+wcZ0j7YHhoVA4YmWkuS2XghSerUdL
ZhIMt61PD9qVDhUpV8WviS7Npe/AnzpRD22zOqoytEbcMxSuceVpPgR6nb35
j7QQ/djLJ9N9GrHddId4TUUHUN4X/womNmCApvyGSCcqbNLmWv/T2wfBHk4L
zeY1eER0int78l9IoIlzlf7jI4PZbpT6KxNKOvxNQr/WQmzBRdMeiTeoeU/S
RJRRhlz/2UHnrwEQNh5PONuHyJyzeBOS9gQtDSg6lge4KN3kH9fyloc3Rs7b
trvykHdm4/uXsxUoGSbcTLxKQmMv05SNMi+w7uExPUEUB8hiY9495zn4xEO/
TX3Jcx4+rhbXNH6Li3u4CQ8ifFAzul7HeqIWl2tI1tvJpOGBxd/2BbsLQGrS
YsFPng76k16L71I6IDnhasDo0ULcKySQBErVYEy5R574iwEb6CchYHsOiLp8
cfhmtQs/vRrSEHbRIWIgOcqgrgs2j0n17BDtwCtbpbtH3CKRPTxlmjdCxb9N
DALO76LBbWq0khi3Dh5Huqpc+JaHCc61MXLKXThpO9ZzyIYB29g6sx6CUnRq
U+xZ0VmJkzYXO28ta8SkdbHUKOU62C27wWLdzhLo+vpxy6+hXIxgXTabQxoq
mGZZNGVyUELzFPnT9Q7UTZSSs36YBsr35P8+R+Xh0fRTd0ycktCaVEhwXOiG
QePopu8XSmHjoL36O3o77iDomVUvlsAsJJ7PN2fjK+fKwk3UYqic0HmodJeL
I2ctC2LdC3BY065UsbwP2gYW5ExX1uK3D4suStlpaHs8efDgUr8RM7PE3WwG
bOQ+f9qjWw83Yq9cuH29BvOlLmdLfQnF116gq7s8E+ed9edPp/Dwf/IjmR8=

    "], {{0, 0}, {160, 15}}, {0., 1.},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], PointBox[{2.0000942251816785`, 1341.4012748416415`}]}},
  
  ImageSize->Large,
  PlotRange->{{0, 160}, {0, 15}}]], "Output",
 CellChangeTimes->{
  3.603386181101638*^9, 3.603386242555447*^9, 3.603386428468719*^9, 
   3.603387449254716*^9, 3.603387585668025*^9, {3.603387722820709*^9, 
   3.603387763092987*^9}, 3.603388528647312*^9, {3.603388722033155*^9, 
   3.603388736769751*^9}, {3.6033888235912027`*^9, 3.603388838175753*^9}, 
   3.6033903224651947`*^9, 3.603409026482266*^9, {3.603441690165697*^9, 
   3.6034417116038427`*^9}, {3.603441749076435*^9, 3.6034417667821407`*^9}, 
   3.603441798547948*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9.227272727272727`", "12.227272727272727`"},
     {"45.05555555555556`", "8.833333333333332`"},
     {"125.86363636363636`", "9.5`"},
     {"62.166666666666664`", "6.611111111111111`"},
     {"48.9`", "3.5999999999999996`"},
     {"39.`", "1.8000000000000007`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.603386181101638*^9, 3.603386242555447*^9, 3.603386428468719*^9, 
   3.603387449254716*^9, 3.603387585668025*^9, {3.603387722820709*^9, 
   3.603387763092987*^9}, 3.603388528647312*^9, {3.603388722033155*^9, 
   3.603388736769751*^9}, {3.6033888235912027`*^9, 3.603388838175753*^9}, 
   3.6033903224651947`*^9, 3.603409026482266*^9, {3.603441690165697*^9, 
   3.6034417116038427`*^9}, {3.603441749076435*^9, 3.6034417667821407`*^9}, 
   3.603441799330576*^9}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
NzFDRbW1Goyiz28vTmqEsyzjUaSIZlQpOb7vsGcpHM7KyaVt5sl31fkgC7vN
nP8mJMMgXw4Z0q8/q+2oQJnj/V5G3GMwbCnErvWmFexyLwf4yPZA3x076Wdy
VZCXUFxmylGM9NukU3QJkZD5srMiJD8bk74lnVHb04+MN7ZkKgYR8Tv9karc
i50oVfOcXzmMhld32157n0rDvKpoKY7sUjwUc76SyEWAa2zlrylpVSCw51K0
qv4Q8Ky66s7dKEeJQ2fel6w0gNv5+pFQyxossF4iVfGWwiEzxUE351aMc3Rp
d8+MAMexEwNlhQO41W8fMdQxF4Qjn2iHxZcgy/b0xhD2Kvj9oJ3jYnsFdE3o
5p8aakaRa88C1+Sb0ew1NVX/Tz9c5VDqyfhGhiMid/6L+m8OSHEdWVOXluBG
axol5OcqqNXhpztuX6Da0btrD3kRwvndTv02mgVO50PKN+3r8OGR4v0H+KjI
pO4ffHa5GTkeMpAYTKjwVT3H68NYP0asGJZXepJg1FTm6NpoBwSf3H/o8S8P
GIi8sefF6UGUPSL6UTveFeK4LT3DMlxAn1HpMtkzA4/vnLhqt7MJ/TjbtGce
lmDv+87YgckB4Ld5ulVoJRJ+BBBfGHCPYv5Vh3f6B4uguufF/jeEOtQ+Gh9T
QmiG4ETGMwc4uuF88OUVuBMLlpfdRuKMu2D71gLAmWooKuq4Pne9EoV1XgK7
XD3sY6O03aTUYvjOs0F7+LtRS2/EzWeNgDUlC7X6LlW4FPBnR4U2AbP2fKoa
WG5ErHjM0MuTBh9sjXvt99UBUepqI8v9UrjXFh10yWEAC3Z2393FOADPcn/+
fBeUjG82hiZSv0TiZw73ZvLWBvh0VmFay5kAK2y61l6bPTCX4hXuP14Agm/O
ekl2kWDAh1e0ZF8baNTw3tLsaMEdu8vzFMcLMTrR1fyteg/8m7nMcEW3HMif
RR4mv63Flsdx9YyLZdiV5vtU0ZSwme9a74/VIOzUpv+zYdCGTdXm7wvN2rDm
yQIf+2oc+jQYkjn9i5DVnbxdgt0OlJc2gbm7DrisHh8JbmpCuflo2YB/Degv
7BCcfaITj5/qVDpFboOZo8InHslT8Vo7Y5CpVh0+iOfYb5hCgNHHZx/WlZNx
oenRTY3OBlTdbU6XnpkDSz4fNdsc+0HbkM7157UxPDfeSl9/uQuZn411XQms
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

    "], {{0, 0}, {160, 15}}, {0., 1.},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], PointBox[{9.227272727272727, 12.227272727272727`}], 
    PointBox[{45.05555555555556, 8.833333333333332}], 
    PointBox[{125.86363636363636`, 9.5}], 
    PointBox[{62.166666666666664`, 6.611111111111111}], 
    PointBox[{48.9, 3.5999999999999996`}], 
    PointBox[{39., 1.8000000000000007`}]}},
  ImageSize->Large,
  PlotRange->{{0, 160}, {0, 15}}]], "Output",
 CellChangeTimes->{
  3.603386181101638*^9, 3.603386242555447*^9, 3.603386428468719*^9, 
   3.603387449254716*^9, 3.603387585668025*^9, {3.603387722820709*^9, 
   3.603387763092987*^9}, 3.603388528647312*^9, {3.603388722033155*^9, 
   3.603388736769751*^9}, {3.6033888235912027`*^9, 3.603388838175753*^9}, 
   3.6033903224651947`*^9, 3.603409026482266*^9, {3.603441690165697*^9, 
   3.6034417116038427`*^9}, {3.603441749076435*^9, 3.6034417667821407`*^9}, 
   3.6034417993350773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Image", "Subsection",
 CellChangeTimes->{{3.6033821950576353`*^9, 3.603382196720202*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataTest", "=", 
   RowBox[{"Round", "[", "  ", 
    RowBox[{"255", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"Exp", "[", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"-", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"16", "-", "h"}], ")"}], "-", " ", "6.7"}], ")"}], 
            "2"]}], 
          RowBox[{"2", " ", 
           SuperscriptBox["2", "2"]}]], "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"w", "-", "15.3"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["2", "2"]}]]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"h", ",", "1", ",", "15"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w", ",", "1", ",", "160"}], "}"}]}], "]"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"img4", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Image", "[", 
     RowBox[{"dataTest", ",", " ", "\"\<Byte\>\""}], "]"}], ")"}], " ", "~", 
   " ", "ImageEffect", " ", "~", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<GaussianNoise\>\"", ",", "0.2"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6033822201527357`*^9, 3.603382289372402*^9}, {
   3.603382322609644*^9, 3.603382339562496*^9}, {3.603382572722054*^9, 
   3.603382597553214*^9}, {3.603382770509254*^9, 3.6033828039936523`*^9}, {
   3.6033828504453497`*^9, 3.603382858505178*^9}, {3.6033839710829897`*^9, 
   3.6033839772823*^9}, {3.6033842644049473`*^9, 3.603384329612853*^9}, {
   3.603384769868244*^9, 3.6033847919181023`*^9}, 3.603384847440894*^9, {
   3.603384977390442*^9, 3.603384999300214*^9}, {3.603385161586508*^9, 
   3.6033851628939133`*^9}, {3.603385282123396*^9, 3.603385336336652*^9}, {
   3.603385390814179*^9, 3.603385391064986*^9}, {3.603386234755869*^9, 
   3.603386238743647*^9}, {3.603386425756434*^9, 3.603386426171361*^9}, {
   3.60338743925075*^9, 3.6033874464018393`*^9}, {3.603387580240443*^9, 
   3.603387582318174*^9}, {3.6033877208174553`*^9, 3.603387720966673*^9}, {
   3.603388719718523*^9, 3.603388724622163*^9}, {3.6034416641163187`*^9, 
   3.603441672029121*^9}, {3.603441740809331*^9, 3.603441780902669*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 15}, {160, 
    0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 93.0625},
  ImageSizeRaw->{160, 15},
  PlotRange->{{0, 160}, {0, 15}}]], "Output",
 CellChangeTimes->{
  3.603386063279229*^9, 3.603386239077231*^9, 3.603386426476016*^9, {
   3.603387439528193*^9, 3.603387446699463*^9}, 3.6033875829078074`*^9, 
   3.603387721233829*^9, {3.6033887203707523`*^9, 3.603388724980042*^9}, {
   3.603441658166059*^9, 3.603441672510541*^9}, {3.603441741565683*^9, 
   3.603441781472783*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ImageToList", "@", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIih+IFzCMAuoCxoF2
AD7AyMTEzMQ0aJ3IxMLOxc3FzsI00A7BDphYuUXllOVEuVkHpQMZWbiljTyD
PY2kuVkGYxQzsYsaxXXM7ogzEmUfjAHIxCXn2XH84fEOTzmuQeg+RmZu5eDZ
D/8/nB2szM08CCN4kIffoE9/gz3/Dvbyb7DWHwAf7SFA
     "], {{0, 15}, {160, 0}}, {0,
      255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{160, 15},
   PlotRange->{{0, 160}, {0, 15}}]}]], "Input",
 CellChangeTimes->{{3.6033859177640533`*^9, 3.60338591997052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GetFrame", "[", " ", "lookAt", " ", "]"}], " ", "//", " ", 
  "ImageDimensions"}]], "Input",
 CellChangeTimes->{{3.6033814296557407`*^9, 3.603381435437497*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"161", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.6033814377337503`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubPixelShow", "[", 
   RowBox[{"img_", ",", " ", "fns_"}], "]"}], ":=", " ", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
     RowBox[{"Inset", "[", 
      RowBox[{"img", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Bottom"}], "}"}], ",", " ", 
       RowBox[{"img", "//", "ImageDimensions"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "@", 
     RowBox[{"Flatten", "[", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomColor", "[", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Point", "[", 
             RowBox[{"pos", "/.", 
              RowBox[{"#", "@", "img"}]}], "]"}], ",", "#"}], "]"}], " ", 
          "&"}], "/@", " ", "fns"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", "Medium"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.603289594099554*^9, 3.603289595937294*^9}, 
   3.60328969271207*^9, {3.603380991415348*^9, 3.603380992022369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubPixelShow", "[", 
  RowBox[{"img", ",", " ", 
   RowBox[{"{", "SubPixel2DGaussianSimpleFit", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6032896239086533`*^9, 3.60328964964047*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    FormBox[
     GraphicsBox[
      TagBox[
       RasterBox[{{0.006437291897890995, 0.05342047930283206, 
        0.09905123339658445, 0.05818513451892371, 
        0.01749622926093497, -0.023965141612200647`}, {0.13455882352941168`, 
        0.2532976827094473, 0.36966551326412916`, 0.2959383753501401, 
        0.22363261093911246`, 0.10285204991087327`}, {0.2605329311211665, 
        0.45108638049814526`, 0.642483660130719, 0.5351432880844645, 
        0.4292335115864528, 0.2341736694677872}, {0.2509803921568625, 
        0.4393137254901959, 0.6251521298174442, 0.5221960784313726, 
        0.41859943977591035`, 0.22970885323826506`}, {0.24705882352941155`, 
        0.4252252252252251, 0.6105882352941177, 0.5055258467023174, 
        0.4047289504036908, 0.22499999999999998`}, {0.13024614100959508`, 
        0.2438842203548084, 0.3520932697403284, 0.2816709292412618, 
        0.2160130718954248, 0.1005042016806722}}, {{0, 6}, {6, 0}}, {0., 1.},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Real", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{6, 6},
      PlotRange->{{0, 6}, {0, 6}}],
     TraditionalForm], {-0.5, -0.5}, {Left, Bottom}, {6, 6}], 
   {RGBColor[0.04279742426188782, 0.9598963465955803, 0.35736625958697976`], 
    TagBox[
     TooltipBox[PointBox[{2.367872587898792, 3.0129502594068494`}],
      "SubPixel2DGaussianSimpleFit"],
     Annotation[#, $CellContext`SubPixel2DGaussianSimpleFit, "Tooltip"]& ]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.603289627816616*^9, 3.6032896600932293`*^9}, 
   3.6032896959769363`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "===", "1"}], ",", " ", 
       RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", "\[IndentingNewLine]",
      "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603398592936366*^9, 3.603398670775762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.6033986759529753`*^9, 3.60339868272368*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.6033986787325983`*^9, 3.603398683007019*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OptionValue", "[", 
  RowBox[{"Plot", ",", " ", "20", ",", " ", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.603399013652916*^9, 3.6033990378567343`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "rep"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(20\\)\[NoBreak] is not a valid replacement \
rule. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/rep\\\", \
ButtonNote -> \\\"OptionValue::rep\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.603399027073682*^9, 3.6033990384680853`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "optnf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Option name \[NoBreak]\\!\\(1\\)\[NoBreak] not found in \
defaults for \[NoBreak]\\!\\(Plot\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/OptionValue\\\", ButtonNote -> \
\\\"OptionValue::optnf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.603399027073682*^9, 3.603399038512588*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.6033990271290817`*^9, 3.6033990385146313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ceiling", "[", "1.1", "]"}]], "Input",
 CellChangeTimes->{{3.6033992178146477`*^9, 3.6033992209745617`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.603399221615177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"from", " ", "=", " ", "1100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"to", " ", "=", "  ", "2501"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"buffer", " ", "=", " ", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ceiling", "[", 
     RowBox[{"to", ",", "buffer"}], "]"}], " ", "-", " ", 
    RowBox[{"Ceiling", "[", 
     RowBox[{"from", ",", "buffer"}], "]"}]}], "<", " ", "buffer"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "from", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ceiling", "[", 
   RowBox[{"from", ",", "buffer"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Ceiling", "[", 
     RowBox[{"from", ",", "buffer"}], "]"}], "+", "1"}], " ", ",", " ", 
   "to"}], "]"}], "\[IndentingNewLine]", "to"}], "Input",
 CellChangeTimes->{{3.6033994208144712`*^9, 3.603399459148102*^9}, {
  3.603399566711576*^9, 3.603399605148284*^9}, {3.6033996539634647`*^9, 
  3.603399831146852*^9}, {3.6033998649508123`*^9, 3.603399910656344*^9}, {
  3.6033999607925034`*^9, 3.603400012265128*^9}, {3.603400123816197*^9, 
  3.603400159155712*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.603399574124753*^9, 3.6033996054878607`*^9}, {
  3.603399712446351*^9, 3.603399780208116*^9}, {3.603399813658834*^9, 
  3.603399831376086*^9}, {3.603399865532323*^9, 3.603399911023758*^9}, {
  3.603399970441152*^9, 3.603400012888863*^9}, {3.603400124742702*^9, 
  3.603400159416045*^9}}],

Cell[BoxData["1100"], "Output",
 CellChangeTimes->{{3.603399574124753*^9, 3.6033996054878607`*^9}, {
  3.603399712446351*^9, 3.603399780208116*^9}, {3.603399813658834*^9, 
  3.603399831376086*^9}, {3.603399865532323*^9, 3.603399911023758*^9}, {
  3.603399970441152*^9, 3.603400012888863*^9}, {3.603400124742702*^9, 
  3.6034001594234753`*^9}}],

Cell[BoxData["2000"], "Output",
 CellChangeTimes->{{3.603399574124753*^9, 3.6033996054878607`*^9}, {
  3.603399712446351*^9, 3.603399780208116*^9}, {3.603399813658834*^9, 
  3.603399831376086*^9}, {3.603399865532323*^9, 3.603399911023758*^9}, {
  3.603399970441152*^9, 3.603400012888863*^9}, {3.603400124742702*^9, 
  3.603400159428883*^9}}],

Cell[BoxData["2001"], "Output",
 CellChangeTimes->{{3.603399574124753*^9, 3.6033996054878607`*^9}, {
  3.603399712446351*^9, 3.603399780208116*^9}, {3.603399813658834*^9, 
  3.603399831376086*^9}, {3.603399865532323*^9, 3.603399911023758*^9}, {
  3.603399970441152*^9, 3.603400012888863*^9}, {3.603400124742702*^9, 
  3.603400159435412*^9}}],

Cell[BoxData["2501"], "Output",
 CellChangeTimes->{{3.603399574124753*^9, 3.6033996054878607`*^9}, {
  3.603399712446351*^9, 3.603399780208116*^9}, {3.603399813658834*^9, 
  3.603399831376086*^9}, {3.603399865532323*^9, 3.603399911023758*^9}, {
  3.603399970441152*^9, 3.603400012888863*^9}, {3.603400124742702*^9, 
  3.6034001594459743`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ceiling", "[", 
  RowBox[{"to", ",", "buffer"}], "]"}]], "Input"],

Cell[BoxData["3000"], "Output",
 CellChangeTimes->{3.6033997376396713`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lets run the analysis!", "Section",
 CellChangeTimes->{{3.6034002882105494`*^9, 3.6034002922194777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AnalyseFrame", "[", "i", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowTrackOverlayed", "[", " ", 
  RowBox[{
   RowBox[{"GetFrame", "[", "i", "]"}], ",", " ", "%"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6034003404656467`*^9, 3.603400345842101*^9}, {
  3.603400766170495*^9, 3.6034008444225197`*^9}, {3.6034091074653788`*^9, 
  3.603409107665347*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"67.76179781892125`", "8.28603279468391`"},
     {"79.57728620268225`", "9.262337294220357`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6034003654751987`*^9, 3.60340047991525*^9, 3.60340057429541*^9, 
   3.603400631624221*^9, 3.603400740700294*^9, {3.60340078403043*^9, 
   3.603400844778954*^9}, {3.603409035404602*^9, 3.603409056452092*^9}, {
   3.603409102788946*^9, 3.603409108137039*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
    "], {{0, 0}, {161, 
    15}}, {0, 255},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], PointBox[{67.76179781892125, 8.28603279468391}], 
    PointBox[{79.57728620268225, 9.262337294220357}]}},
  ImageSize->Large,
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{
  3.6034003654751987`*^9, 3.60340047991525*^9, 3.60340057429541*^9, 
   3.603400631624221*^9, 3.603400740700294*^9, {3.60340078403043*^9, 
   3.603400844778954*^9}, {3.603409035404602*^9, 3.603409056452092*^9}, {
   3.603409102788946*^9, 3.6034091081421432`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unzipper", "[", "el_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"el", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"el", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "}"}], "&"}], ",", 
      RowBox[{"el", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6034031468444033`*^9, 3.60340314684781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unzipper", "[", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.603403163116996*^9, 3.603403230242268*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.603403190282473*^9, 3.603403231222439*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6031958792746353`*^9, 3.603195882399428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "VideoTracking`"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SelectVideo", "[", 
   "\"\<~/Dropbox/PhD/Software/video-tracking/practice_videos/video_2.avi\>\"\
", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectROI", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"291", "140"},
       {"451", "140"},
       {"451", "126"},
       {"291", "126"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"UpdateBackgroung", "[", 
  RowBox[{"1", ",", 
   RowBox[{"NumberOfFrames", "[", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.603195850107835*^9, 3.603195855777253*^9}, {
  3.6034034355371847`*^9, 3.603403445327416*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"video_2.avi has 1333 frames and is 720x480\"\>"], "Output",
 CellChangeTimes->{3.603403457971257*^9, 3.60340359143891*^9, 
  3.6034039006857777`*^9, 3.6034039802773447`*^9, 3.60340407001258*^9, 
  3.603404172882896*^9, 3.603404362876113*^9, 3.603404503796072*^9, 
  3.603406096846156*^9, 3.603409074385693*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"291", "140"},
     {"451", "140"},
     {"451", "126"},
     {"291", "126"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.603403457971257*^9, 3.60340359143891*^9, 
  3.6034039006857777`*^9, 3.6034039802773447`*^9, 3.60340407001258*^9, 
  3.603404172882896*^9, 3.603404362876113*^9, 3.603404503796072*^9, 
  3.603406096846156*^9, 3.6034090744165573`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxEewk4Vd//deZGkUZDJaLQt0hRaJVmUkpKRYpKpqKQIamoCEVUGohKUokU
RSQaRIY7z/e611zGikjk3Xr7P7/1LM95znHume7e67PW3udquhzddlB61KhR
E8lfGvnLWzhheH9WNeib/mip29Fw/9yrJINuJrwevI9/psGD2aKCHtZBESLC
RyDGGuX13/NEEkxKlDU38qnHRJXTNz2UGxDrWP5f4/V6XLSv6ihYVI/I/skC
Gw8JzNOM6EFFYlhLTbGVmiKGvJkkccGgCOO1mqdqNYvQ/Hb2frFEhN/N39uP
/leH/KyEtXtu12HDmcIfBofq4D8+ecGbzXUocfwvmrpGhP63j8cMOgrBGLN1
uWG5AHpqq3pjnAQQTt8UltskgNSyA/feXxEi+aPK03prEayWHBmsm16Hj+c3
OO2QqYNy/aRZ9ZPqYLBJ5VzaYRF0m3sE98RClKi+U8nrE6A4sJ1+d6UAHdzd
pjvL+DgrW6mZ4srHMdGj9yZ/eJj+VbJkRgkPK9Kzwu3NeeiLXPmjrJGLiVcG
HuSv5uLF87h7VhUcxHe5JHW5cHBkvVngejMOlH0frnSV5mBQ78rG5c1sMHLd
2YRYuvNBdtpSNqxVzX2NHrOwgnV0zD1zFhKujoCJcy5LMXYDE7uGM7cPZzIQ
vV2zs/ACA/0Kq3sUVjOwxZjtEm/NQOe62aNvLGYg6tNqm+X7GMidHCJZ/5SB
zMBUje5pTCiUw/NQOBNx269nOZPvN23pxeCOPiaaZ5ktqtnDgrnQQLdKjYXJ
o//8+FLHRNZV0/ffnzCx7mx+zGQ+EzPeekx560H2d3c8sSqLia2+zq1a8kzE
b1+S+yaGgXe9ube/7mJgmFvjn+XBwOUfd7LNjRh4PujZXGDPgN81q/pcZQYE
Thc7J6oxMO2s0+SzTmQ/u2tP9nYxULzFj5AJldtDU24PMSGv+83xnDEL13ag
3vs2Cw92vLCY/pSF2L28a3t5LGwubo+1prBwpkpbJVSKjfDax8XGv1jgonPc
/YlsDB34bJj0hwVlXYHCrslsxA/39egcYSNo/Qczi042LMMvs1O+sfFJWXDb
ZyYH62LCLtw15GDftYrBha4cFI6dLjvHn4McOES1ZXPww3RYduYSLl6eqi44
Vc3FtrLo2xvauTC2mWLtqM3DtW0KRT5zebAan97zzIqH0fbiTcaLeDDHCHgw
eH+C/jmNh1hWUtllNT5KGB7No1z4YPH/AvWHds7QJO2uwjF67X9UAR5KnVp9
a5oQVz6+nq2RKMS4nV8m7PwixMvJqYu6d4hgbGK0YJ6WCDuuHBsyUhHhZ57R
nzwj0t7vxdj3+ItQNL036DhVhIxNNQFtW+rwaFxybYmxGG67J1n3U8UI97Bf
qT9Vgvuyqccr3CSIcHLVrUmV4KHPgrLKVgm0fSbKbu6QQFNSOT1Suh4Nypxu
O7EEXPrdL4dqJDj0qEz/x5AEn2RmTc5FPTLspum9ulsPXi9besfUBtzxtXEL
8mpA4OTDDp+ZDej4Wflhz94G/Dr7zHN7Xz0i3NoGTA3r4az6ijs2WAI6fyDA
bb4EHJmTeYVfxNhquE76jqYErS0E5PpudT4VFV6VQKVt/GkFhgSW5gRFEvQF
l1+UypPA1MbiFZ1Sj60Kd47WKDVia9F5TUZwCzzf3N3xofcrzhy1qjo32I60
5YFr1i/rguF7i6CimR1ILle6V67UhmSDeKqiy2e4Nh0rzMqjgDMOx9I5dNz4
M7jnxDw27nKmrbl2m4dtT2gJlnJC1H+OqyOE8tYxc2dDjIuFm3VOMMVYrXTn
V2iwGOaXZqpd1RMjyn/nMrUhojMzS2w/fRRisfo1Y/VrAkzuGpZmnucjbtuH
yaYH+HjpY9B6z5kPM5OTvpPu81F82KRFe4wAk3RlrF/z+Ai+t/R6Zy0fgVar
Puf1kfaWXed1ZBUPRmvsD52I5GLw01WXhYOk3Z5wKjjhxEVYqkXvBDEXDsph
u5XDeFj8F3wMTXe8JmfCx56/4OPOQpVNvGIeHh5rHPVpGQ91ih6zYw9x8WVr
73O3Ag5GbxcdcFrFwZ9x8lHrW9lIXbxt4JofGxa6703kV7JRX7jQxEjMwufg
3KO7MlhQ+9teWKhJjGISImRsgtp9AyZiKB2lMppMMJgjIP1/ueOp1DIGPLb7
rJNzY+B3ur1c3gEGjFZs2ed7lo63R0tTg7XoCDQ5f8zkPA102l8gxvKYVPZL
KlZYjICKQlfFAldFKhYo+zdp6VGxhKM7p3wqFaHNOdZ/7lMx1a1I2a2IireH
Vd4cVqEhhfVq/ShtGsLO12V8HUXHwoRfzh8N6Ji6IU5lQxwdzn+fCx0xP2fW
HCXbowo7Zm+/QENj8E+lY/p0JI4SXBkloKFNpmaZizId9qaJ20wTaRg4O8xs
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
gHPVKG9TKgU2prm2prkUVPvlUwix8kFFszrRw4W6MZHDD8lxBl9HpBA9HV2Y
a9HRRAE384COmTEVs4z0OT9AxYdFwvago1Q0Vp7q0HAlfvhiVuOOYCpuFmz8
6b6Fiiojayohkuz13mRHU/GsavP7wO9UnNi56YdeKxWBCx11efI0yNNyF5qP
pYGZ0zulw5CGX2MyDh9XoiHGW/uKtzYNaS67l+Xdp8EszTT28046QneY+B5/
RcdGsdTuNHMGcvXpD9eRnF8r6R5WnMnEz5o0v/WqTASVXGi5uYIJ783Bpmrr
mWg8setVsQ8T76zoexq9mOhb5Hir6CITrfbC8hUtTJi0ddXkHWShxmD3p4sX
WCj5PndXTAnrX3tj45LnnDjPORxU7A77tDuMg0tZnl0tPzkI3D4uaPs4Lnz8
ZPprV3Ox90rywVDiO5WnKBqebedgwRMVRb0ULmpUL8pyjvNw43qovNpePhJp
Uj9NDwsQFtWypK9MgO0K0+7fMBMit+aqgnabAOONqpe15wlQUbK0+MwKAR57
v91n0sKH3BfNnASS/2i7Ii31a7gQ/BfBJUSbwI6XsoeLd0EucvElXDimydTn
rOLhKbv48atVfKxlvvoW5iqAz1rWEZ3dIjwZvH1cy1SMY33yay1m1qPP68dL
v0mN0EoYsJxI9E6Hf//zIXoTHk8wuXCsshFOfb+eLqA3YIzN6efNMypgmjHB
j7eyFu/aXDpkSK74NkVk+KKbiUVXf+//9B/RI79xIX7j+BhwpN5tHRbgwkzf
141RItQvuK/8YroYPaPvZyy6UIflGjsay0fVYbbzj0o1otcDMc42QdoCTO0y
3pSpwccK3vEJGSvJ/VYI8qU9edh9zss8O4uHI5Kh90vteFj8pWD5Pg0evrs/
fHr1Fxei3uU74we4WMseM3CEx0G7aV1pSD0bOXN2217KYSM3xPhmQCYb2iuj
x7y+w8buH1Py9J6S7WM9Ege/saGm/27U/p0cxIw1VUp4y8GWokjH+1tIrpjy
y/DtPQ4+H15v3qDKwUSjpyn7DrPR7xB9ObiBhcenrKc3PWNBKed0nWYyCysj
xokby5k41zU1tovkn6qq7Jt3SxhIGX2UaXaXgSHpVNYDJQYOpm2sVsih49TE
/1jHbOlQ19Rfgo10cKSL0zcwaLAceE2pCKBhAZ++V1GBhlN5q3X3dVIRPPNy
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
4FvaKfL9/hsn9i7afLxoMx1Xs7/eyv5KB+NT+33jKQxoXfOdd82XgdfWS1xG
FzFQ95z17LEeE4d6tUQf3ZkoKjR33M5iojSiMfO5gAnr194me38xURGpWiwi
618bzEdzeUxM6w3LuzqbBb3WoxqxcSzIMdOOmI1m40fw1PXyuWyU2sUnNtWw
Mb31Gv+TCgfb/447c1CnaREy8JGD575dP74OcjDgYPfLwY6LXX/BRYjOnCmd
gVy0fw6vnP2K+LCxMwbGEh8YYnv1Ye98Pkx09Nx3OQmgeLc4YLS2EO8XKgq9
5UU4VswwfHCC5OP2Mivl8UJ8X7DNVGexAL922qdqnuTDc+0ji+hSHgJqtYNr
tXk4mp0ROV6dh+XB8Z0uxiPzm6O/eJ3kId+rxHlpMw+P4iZru+zmo3iB+xPF
Dj50Cn3TK7KFsFB0O58aXYdQO5npb/MkiL53ibbkeQPmaxW89ulqhEZB5bLT
5s2IVt25cdJSoofl0n1XVjbC/NPNMkyqRESTwbRYQwr+OzdxBv0UHTIFF9bV
LmPjxclKF8vpfPR3vNXWOitEnS+lJnwM0Tn1me4NAjGWvf34nV8qgb2Dk4ub
lwQ69pGvOzUlyHGLDpJeIcbN3I6U3A4RGqxKDZeWC7GgOdl+wgcBKmnd3Chf
kq//fDT4biSA3u2ergADASy8igOjVwrg+i1IOlpFgLFeAlXN0QLkN7UtebqV
D3exA3VjGQ/tmiMn4qLz+8zRnRZcqIkMZogMuJhmNOgWBy7SbH+n2/7mgs37
C3xXc+mUN+XBX+O84uYiLkrCPR7bkPoSYL6ievx8Lr4kxNVHnefgTFL6tb3j
OeguedqcQ3J236qTrTG2bGzUm37Zah4bJw4MPM40ZSPm4y/inFlQXPOwgrGA
Bar0gp1nHjOx1X4ETDgbm1afFjCQlDgC0r5H4potA4ndv59NmslAzuMR0HFS
JWudOIiOd4luyyeIaRi/p3LN9Bc0OGTL7s6WJbnJd3JqTSTxI/FybHXSb5lR
K35kOBJf8q+fYtrhj2OIfp1YNKNoPfFh/5enc/6Nq5k2XlrWeImK1H/vtawN
033cRHJcPSrXaeiT9b+gou96i+Q80dvyjChPG+KPvo6b5mMaQkXkP/2LLA77
vuoguY4Dcu/Wr6CibZP80xJ7Khyeyux6KkMF393m/OR+Csb5si3ujyU6+eUY
IQXU3hUjhMB2zuEwAdGvKO8HxtOpeG660FKd5NqcmQOE/9PPvU3s70XEd31U
Wl53nPg52a8mGZq9FNwxNf+g1kP0cP4IqFAP6ngjq05F2ZjmviMkz95127Sz
gNxPvtrqArXVVJjcTm1eZ03FC8+1ua3hVJIn9Tqf+VMxZHFsA+UaFaNW/P/l
V3rcjhaibxfWbci6zKMiYb67XasuDXN/JtSuW0LDJ4tLV8fuoSFIcQHTdwsN
P3oI/Gi4v7d73IcdNKzNe3T94T4aDM94G53xpiHtGMZz02n41avX4ZxNg2jI
ZXcAnwZ1UfmUc8M0WP6dj6QjJv+Vb9JNOvY+snq+dzbxf5geqrSXtI+0QPXY
SgYW1uZpTpNl4o6/bt0UFybJFZUGd+4zoe8Yld+gxAKrN/1M0yQWLmVXt42Z
x0Leo7ezlHVZcJqRGOVnRer3F6MHVhEs5OiZati1sGDNLjWVbGFj0f7ZVfF1
pF0ffvbnvwkcWM0+pVXkyEGKakGqagEHTo/M9z8y5yKngbFOZzsXP/tO1nhe
4YKT1CfOucjFPgOh8cJ7XIxivrA3bOHi1sRPmYs28TD20Mf1Nq58tI6WCr97
U4ANDqz8N+ZCFGUXrS0ZECJyTeDtsz5CHPC8uWrOaCGmhN85xOnhY3mm0q65
UkQ/l4+Ah7nJluGL4ojvy34z2MPkYvlNRfFcCx4uy/18WSLiIXJy/6KSu3w8
bi7RfiUnwIDpSVFRtADM0ef8TSDC1eOxd64QfRqURCjhlwR15ofy03414Om9
Zebfjjbhv7ygpYzeZuh+Nvn6nNeEksrfL0wojRBIOdVttqzEkWMjoOCAzdS8
pXV0dN5o8jvylY0Jgof+lhMFqHBuD5S7IkLFscogzlUxBsaWuzaHSpAnfOUX
7lmPzv+sz3VOqMe+MyEbZ5dJ8G7hCbuDRCdzCrfNuCkjRmtA78OZCnXQsYpe
OHeeCHVz0x/cyxTiWtTm5KjNQihv0Dw/w02I9CrXoJNpQmx7Yrg/yVEIeidP
7uzIOOvLPSWtIQLwrS/GneDzkZL9plrQxsOVSnFesyYP2hvFvf0apE78iOv2
JPWjzev9ljY1PrpuePs9VRPg6oJttxZs42Nrf1FM3gMeLoTk7zhG8naGb/4i
KvG7p/eO9ZS6xkW9oafOk3FcHP8eF/g9jgO92eGl+TM4iJzf56Tcxsax6Vvn
7W5ko01KRXvJOjYm+uVJ5VBYsAm32xFux8KJL8qlLrNYCFH8rldwm+SW05F7
F01jIkrxSYTiEwbuJN6d0JHMgKIkotfIggET35XGvisZqO3o36rqRMfjGzKR
3uPp2PYXNPiWqx8rV6fhod0fQgoqD9IiNpN8u3mNd4WDGvFt8SMgOW3r4Q/L
xlEhG18WmSZLhVekY8rry1QsMd/DLo+iYnJ+n3J+HxWxoUecbVeRfnxS4lfW
T/yctBdzBclz2wcfbB18QPTq72u9RP/ic5euJ5+jL/hpukWK9PMLAkIqupWv
PWgl/sfrffK5qc+oGKwVhm96QUWQe8TmwnqiN071nLYPVKgaXpJmzKAifkc6
IfG1k9dunUz0VmlpmPLSMHId7DlHCmQpOL5yAu/BcQpeLFu0WsOdipXZF1dl
E33/OjKtE0dF9LeU7frnqWDonKQSQrzi9q8d5Hzbv1M+eN0n/q3l7l5VFhWi
nYWSnSSPlqsGrpajE9/70kpuyXuyf9qNwJ4GKuadG6f6vY74uzE1ucWzaNj5
riSZR57rKssR0PBFkp6xNID4cK//FIwFNGwrrvX1+ElDzsDaeIEuHaGWcyok
U+mw3aD5ZNN/dCzT3N36WZaOwS9KllZkv7naotCgxXRkpt+KvxBKxye1aDmu
Hx3a342th2Lp2OHzzO/NLTpubzuc6UVyQZOl4a1ZcgzcWDF4+sRFBsZ4TQuT
L2fgqYts6XqSdy+tz2/W92DitKaeYuYzJlZ5yh+f28XEK/nc3+GHWPDZeony
wZkF3wyL5clkPUCHq5x3hYUNN08ZpVFZ+BwmujV1PBsaCd5P7V3ZOPVyUOFo
NhvqfkbT/UjuFbetmWB7iOSioLnLbUo5kEQvJeSCQh0BFxXev3TrK7kYK3GN
d28n2/Md0+J5XIQ9YHQcbeLCPeon4+QSkkvP7addvceD96E9C8NIHs6daDUz
7KcARoF8h1JvIZy8bllqjRFB3n5q/bgIIX5XFtdPniPEhy0jL/7x8WXtq+LO
DB50u6Y806BwMUCtcjmoyoXsUc025SwuTmn2ZxQdIL4n5Y9uINHZ5HDfUwpn
BDic+t8ka64AztyGVXFbhTgn/bD1aq8IZ/WWlxftFWPIsdvCz6YeDywvLLhs
1YjJC5iVP3834RPbODP4bQteDMfnD8c3I3VN1401RB97NhRwbkyrQrrvMtXr
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
JdH/+58q0k9VvKLTSX/ckxP4mhrOgPwqf2v6DQY2xrqHfM9nQIs5atuE2URn
//1+eaJ7f2EOl4n+cldLExHZLlN3VaaOiQj7W7kTI5hof6a1UiGIid38j9Op
XSTXb7cQe95kgOJ3gJqu8b/xzhgVy8HGC0SH1hyzqh6gQb6A7bjhJg2Z9OA9
q3bQ8C3DdRb/Gg3Rk1b9bjhPAzt0Hp0Q2f/GSQseSi+n9RCfendkpJHoUHXU
rOTHDLT63XNa94WBk0a9fPUSkhunhzVZ5zJw2aM80YPkyO5r71XTlJjQyLyV
f5roTXAowRAD9ZM3hDyVMDC4wXyNcycDuyeUBeiLGVixwEFjzjDxZc8b5yYb
MTH86uCpBxeYsHuXYv8uhYntMun7W3lMBNPnnaLPY8F8piRu520WCt0T/nxy
ZeGYa3P6ojUsFDGt4jpWsHB0pv/sn/tYsF43Ny1uMws6MZUlc/azsPhtu+2x
UBYu7k6ay8plIWTiD/3CZBbk516oWkLWz0cRjGHjzJWvWpxUNlYcvJD5uYPU
S+vL9GmOHLxPEvVuK+dgv3N96ipfLrISnV17Pbj4j33LM/EcF6HLz78T3OKC
xf0LHLv0cek0DslvcQJvi34uPk99xkhbzEMMz2fRVeLjZPKrZA428GCQJRun
78hH5Z6LaxYQHXuWUPCpxkOAB7HFThopAnS8W/y1v1eAy7mMn9PNhCivSSwo
TxdCOVpr/oQbQlSdnKTzPksIpTfb0rumi6CbaWzp80AEo6HRH6/drcMt++9+
4/eR3DeYS0h0KSFOsUNFgrYc3raYeDHM/r7wLMalmTYK3VdE2JD2lvdhjBAm
BSr0uR8F2KobM8v7ngBnf55c9eeWEEnXN332eSZCms/sJUKaCOPuVF/wIflw
yubfuyMYdRhtNjlo/G4xFCiPP7ArJVDxt5vz3LoBQVTfDf3jm1C6ZbHXgLAZ
GW62P05ltaDRZlRld3QrqCXT5vzsbsaLytFS9QebMMawjR4gTcW4XWtuPwhm
Qq3v1NqVyjyUv9A1ihPVIWpPnDCnqR4ynWaP5/5qhGthm9mfGS0446449Mmg
FU+/ZsTXbf6C/sjC0zcGW7Et7tvajvxWDJr+rFuQ3IKkayNoRnrhm+GJk0k+
P+/zZsHDBoj++poGVO3lD6SHNUC/xGyPvLgB559ujXi6tREfypoHvSY3ItZx
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
    "], {{0, 15}, {161, 
    0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{3.603403457971257*^9, 3.60340359143891*^9, 
  3.6034039006857777`*^9, 3.6034039802773447`*^9, 3.60340407001258*^9, 
  3.603404172882896*^9, 3.603404362876113*^9, 3.603404503796072*^9, 
  3.603406096846156*^9, 3.603409077537006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetFrame", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.603406102152485*^9, 3.603406105442906*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AFKovIQ=
    "], {{0, 15}, {161, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{161, 15},
  PlotRange->{{0, 161}, {0, 15}}]], "Output",
 CellChangeTimes->{3.603406126079144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", " ", "=", " ", 
  RowBox[{
   RowBox[{"RunAnalysis", "[", "]"}], " ", "//", " ", 
   "AbsoluteTiming"}]}]], "Input",
 CellChangeTimes->{{3.603404050360714*^9, 3.6034040590304613`*^9}, {
  3.603409418657542*^9, 3.6034094232932*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "47.42494099999999690453478251583874225616`7.696606712547433", ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", "67.76179781892125`", ",", "8.28603279468391`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "79.57728620268225`", ",", "9.262337294220357`"}], 
              "}"}], ",", 
             TemplateBox[{"2663"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
             
             RowBox[{"{", 
              RowBox[{
              "1333", ",", "119.77829238379142`", ",", "7.845966867421872`"}],
               "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{59., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 12, 24076864325537425885, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 12, 24076864325537425885, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 12, 24076864325537425885, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[12]]], "Output",
 CellChangeTimes->{3.603404118978282*^9, 3.603404220623451*^9, 
  3.6034043075775537`*^9, 3.603404411827359*^9, 3.603404454690321*^9, 
  3.603404560004684*^9, 3.603406157523696*^9, 3.6034094738238564`*^9}]
}, Open  ]],

Cell["\<\
unparallel execution took ~41.3945 and parallel took 41.389065 

\[Implies] seems to be diffrent only in initiation 

second time the same:
parallel: 27.24 sec
unparallel 26.8 sec

\[Implies] keep for now just because might work on better computer

In future need to optimese this by having less globals?\
\>", "Text",
 CellChangeTimes->{{3.6034042347308197`*^9, 3.603404276360146*^9}, {
  3.603404313358861*^9, 3.6034043318531427`*^9}, {3.6034044312667723`*^9, 
  3.603404481826408*^9}, {3.603404566744412*^9, 3.603404583442753*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"40.3945", " ", "sec"}]], "Input",
 CellChangeTimes->{{3.60340412855767*^9, 3.6034041342264233`*^9}}],

Cell[BoxData[
 RowBox[{"40.3945`", " ", "sec"}]], "Output",
 CellChangeTimes->{{3.603404131243204*^9, 3.603404134490267*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MemoryInUse", "[", "]"}], " ", "/", " ", "1000000"}], " ", "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.603405810083762*^9, 3.60340583631532*^9}}],

Cell[BoxData["112.916104`"], "Output",
 CellChangeTimes->{{3.603405810916245*^9, 3.603405836665213*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New buffer testing", "Section",
 CellChangeTimes->{{3.603462643505643*^9, 3.6034626483744392`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "VideoIO`"}]], "Input",
 CellChangeTimes->{{3.60346269656376*^9, 3.6034627009231253`*^9}}],

Cell[BoxData[
 RowBox[{"AskBufferFor", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.6034627414559183`*^9, 3.60346274394775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "VideoIO`Private`bufferVideo"}]], "Input",
 CellChangeTimes->{{3.603462754443182*^9, 3.603462766302537*^9}, {
  3.603463224785385*^9, 3.6034632317797956`*^9}, {3.603463533647716*^9, 
  3.603463544237981*^9}, {3.603463825453532*^9, 3.6034638268282537`*^9}}],

Cell[BoxData["401"], "Output",
 CellChangeTimes->{3.603463827098085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["VideoIO`Private`bufferRange"], "Input",
 CellChangeTimes->{{3.603462791351528*^9, 3.6034627920191307`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "399"}], ",", "401"}], "}"}]], "Output",
 CellChangeTimes->{3.603462792393774*^9, 3.60346321119462*^9, 
  3.603463529206644*^9, 3.60346380793878*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VideoIO`Private`bufferSizeN", " ", "//", " ", "Floor"}]], "Input",
 CellChangeTimes->{{3.603463393866654*^9, 3.603463425151425*^9}}],

Cell[BoxData["1446"], "Output",
 CellChangeTimes->{{3.6034633974491463`*^9, 3.603463425481439*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetFrame", "[", "1000", "]"}]], "Input",
 CellChangeTimes->{{3.6034635196779423`*^9, 3.603463524182827*^9}, {
  3.603463796822712*^9, 3.603463796939858*^9}, {3.603464164357379*^9, 
  3.603464164787006*^9}, {3.6034642002315893`*^9, 3.603464200962392*^9}, {
  3.6034644192756147`*^9, 3.603464423823992*^9}, {3.6034647597778273`*^9, 
  3.60346476351502*^9}, {3.603464889874385*^9, 3.603464900640011*^9}, {
  3.6034650688358393`*^9, 3.603465077929204*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Loading: buffer append with new files. Buffer: {1, \
801}\"\>"], "Print",
 CellChangeTimes->{
  3.603464900975975*^9, {3.603465069929775*^9, 3.603465078377636*^9}}],

Cell[BoxData["\<\"Loading: buffer append with new files. Buffer: {1, \
1201}\"\>"], "Print",
 CellChangeTimes->{
  3.603464900975975*^9, {3.603465069929775*^9, 3.603465082753029*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
r0ay/w+udDGw
    "], {{0, 76}, {81, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{81, 76},
  PlotRange->{{0, 81}, {0, 76}}]], "Output",
 CellChangeTimes->{
  3.603464165385302*^9, {3.6034641987752657`*^9, 3.6034642070954857`*^9}, 
   3.603464369320407*^9, {3.603464418081674*^9, 3.6034644243808517`*^9}, 
   3.603464656975071*^9, 3.603464735324494*^9, 3.6034647727744093`*^9, {
   3.603464894927701*^9, 3.603464909780541*^9}, {3.603465075128705*^9, 
   3.603465087173173*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", "1220"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImageDifference", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"GetFrames", "[", "i", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
    RowBox[{"GetFrame", "[", "i", "]"}]}], " ", "]"}], " ", "//", " ", 
  "ImageAdjust"}]}], "Input",
 CellChangeTimes->{{3.6034650995353613`*^9, 3.603465149940333*^9}}],

Cell[BoxData["\<\"Loading: buffer append with new files. Buffer: {1, \
1329}\"\>"], "Print",
 CellChangeTimes->{3.603465150214898*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztybEJgDAABMAgFq7hKFrbGCdIQFshCpLtjWvIHfzD82M+49GFEK6hVUzP
VEqqW9/GXO89f9fSsgYAAAAAAODvXvi4CD0=
    "], {{0, 76}, {81, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{81, 76},
  PlotRange->{{0, 81}, {0, 76}}]], "Output",
 CellChangeTimes->{{3.603465130271306*^9, 3.603465151570788*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StatusArea", "[", "\"\<label\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6034739528061113`*^9, 3.603473965746667*^9}}],

Cell[BoxData[
 TagBox["\<\"label\"\>",
  StatusArea,
  TagBoxNote->"\"label\""]], "Output",
 CellChangeTimes->{{3.60347395351486*^9, 3.6034739661823463`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{636, 756},
WindowMargins->{{Automatic, 14}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 18, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 113, 1, 92, "Title"],
Cell[696, 25, 138, 3, 28, "Input"],
Cell[837, 30, 124, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[986, 36, 312, 6, 63, "Input"],
Cell[1301, 44, 963, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2301, 63, 902, 23, 81, "Input"],
Cell[3206, 88, 1519, 32, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4762, 125, 200, 3, 28, "Input"],
Cell[4965, 130, 5689, 98, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10691, 233, 130, 2, 28, "Input"],
Cell[10824, 237, 124, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10985, 244, 223, 5, 28, "Input"],
Cell[11211, 251, 24758, 410, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36006, 666, 133, 2, 28, "Input"],
Cell[36142, 670, 140, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36319, 678, 187, 3, 28, "Input"],
Cell[36509, 683, 618, 15, 63, "Output"]
}, Open  ]],
Cell[37142, 701, 92, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[37259, 706, 211, 4, 28, "Input"],
Cell[37473, 712, 577, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38087, 731, 576, 10, 28, "Input"],
Cell[38666, 743, 646, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39349, 764, 160, 3, 28, "Input"],
Cell[39512, 769, 117, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39666, 777, 403, 6, 28, "Input"],
Cell[40072, 785, 18662, 347, 173, "Output"]
}, Open  ]],
Cell[58749, 1135, 104, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[58878, 1140, 248, 5, 28, "Input"],
Cell[59129, 1147, 437, 11, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59603, 1163, 229, 4, 28, "Input"],
Cell[59835, 1169, 145, 2, 28, "Output"]
}, Open  ]],
Cell[59995, 1174, 252, 7, 119, "Subsection"],
Cell[CellGroupData[{
Cell[60272, 1185, 109, 1, 51, "Subtitle"],
Cell[60384, 1188, 552, 13, 63, "Input"],
Cell[60939, 1203, 847, 25, 63, "Input"],
Cell[CellGroupData[{
Cell[61811, 1232, 370, 7, 46, "Input"],
Cell[62184, 1241, 2942, 62, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65163, 1308, 452, 13, 28, "Input"],
Cell[65618, 1323, 683, 19, 63, "Output"]
}, Open  ]],
Cell[66316, 1345, 2674, 70, 287, "Input"],
Cell[68993, 1417, 2668, 72, 288, "Input"],
Cell[CellGroupData[{
Cell[71686, 1493, 458, 9, 28, "Input"],
Cell[72147, 1504, 1369, 24, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73553, 1533, 406, 8, 63, "Input"],
Cell[73962, 1543, 309, 8, 28, "Output"],
Cell[74274, 1553, 251, 6, 28, "Output"],
Cell[74528, 1561, 1234, 22, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75799, 1588, 132, 2, 28, "Input"],
Cell[75934, 1592, 704, 18, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76675, 1615, 184, 3, 28, "Input"],
Cell[76862, 1620, 541, 17, 28, "Output"]
}, Open  ]],
Cell[77418, 1640, 732, 17, 63, "Input"],
Cell[78153, 1659, 676, 16, 63, "Input"],
Cell[78832, 1677, 592, 15, 63, "Input"],
Cell[CellGroupData[{
Cell[79449, 1696, 1738, 32, 233, "Input"],
Cell[81190, 1730, 510, 10, 41, "Message"],
Cell[81703, 1742, 1087, 24, 28, "Output"],
Cell[82793, 1768, 25769, 426, 69, "Output"],
Cell[108565, 2196, 1304, 29, 115, "Output"],
Cell[109872, 2227, 26008, 430, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135917, 2662, 100, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[136042, 2667, 2284, 51, 135, "Input"],
Cell[138329, 2720, 25718, 427, 108, "Output"]
}, Open  ]],
Cell[164062, 3150, 685, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[164772, 3171, 195, 4, 28, "Input"],
Cell[164970, 3177, 120, 3, 28, "Output"]
}, Open  ]],
Cell[165105, 3183, 1423, 35, 216, "Input"],
Cell[CellGroupData[{
Cell[166553, 3222, 212, 4, 28, "Input"],
Cell[166768, 3228, 1714, 33, 375, "Output"]
}, Open  ]],
Cell[168497, 3264, 500, 13, 80, "Input"],
Cell[CellGroupData[{
Cell[169022, 3281, 121, 2, 28, "Input"],
Cell[169146, 3285, 96, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169279, 3291, 179, 3, 28, "Input"],
Cell[169461, 3296, 475, 9, 24, "Message"],
Cell[169939, 3307, 510, 10, 24, "Message"],
Cell[170452, 3319, 98, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170587, 3325, 132, 2, 28, "Input"],
Cell[170722, 3329, 70, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170829, 3335, 1269, 32, 199, "Input"],
Cell[172101, 3369, 342, 5, 28, "Output"],
Cell[172446, 3376, 343, 5, 28, "Output"],
Cell[172792, 3383, 341, 5, 28, "Output"],
Cell[173136, 3390, 341, 5, 28, "Output"],
Cell[173480, 3397, 343, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173860, 3407, 89, 2, 28, "Input"],
Cell[173952, 3411, 75, 1, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174076, 3418, 111, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[174212, 3423, 511, 12, 97, "Input"],
Cell[174726, 3437, 934, 22, 47, "Output"],
Cell[175663, 3461, 3283, 57, 69, "Output"]
}, Open  ]],
Cell[178961, 3521, 619, 19, 46, "Input"],
Cell[CellGroupData[{
Cell[179605, 3544, 436, 14, 28, "Input"],
Cell[180044, 3560, 455, 15, 28, "Output"]
}, Open  ]],
Cell[180514, 3578, 138, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[180677, 3585, 1305, 36, 227, "Input"],
Cell[181985, 3623, 328, 4, 28, "Output"],
Cell[182316, 3629, 888, 23, 81, "Output"],
Cell[183207, 3654, 24432, 405, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207676, 4064, 127, 2, 28, "Input"],
Cell[207806, 4068, 3074, 55, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210917, 4128, 261, 6, 28, "Input"],
Cell[211181, 4136, 8662, 224, 108, "Output"]
}, Open  ]],
Cell[219858, 4363, 544, 15, 220, "Text"],
Cell[CellGroupData[{
Cell[220427, 4382, 124, 2, 28, "Input"],
Cell[220554, 4386, 125, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220716, 4393, 196, 5, 28, "Input"],
Cell[220915, 4400, 104, 1, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221068, 4407, 105, 1, 80, "Section"],
Cell[221176, 4410, 119, 2, 28, "Input"],
Cell[221298, 4414, 132, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[221455, 4420, 294, 4, 28, "Input"],
Cell[221752, 4426, 72, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221861, 4432, 121, 1, 28, "Input"],
Cell[221985, 4435, 205, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222227, 4445, 156, 2, 28, "Input"],
Cell[222386, 4449, 99, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222522, 4455, 476, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[223023, 4466, 182, 3, 22, "Print"],
Cell[223208, 4471, 183, 3, 22, "Print"]
}, Open  ]],
Cell[223406, 4477, 6729, 115, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230172, 4597, 437, 11, 63, "Input"],
Cell[230612, 4610, 134, 2, 22, "Print"],
Cell[230749, 4614, 500, 12, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231286, 4631, 143, 2, 28, "Input"],
Cell[231432, 4635, 158, 4, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
